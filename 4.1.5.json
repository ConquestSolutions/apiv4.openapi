{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "conquest_apiActionAssignment": {
      "properties": {
        "ActCPU": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        },
        "ActQuantity": {
          "format": "double",
          "type": "number"
        },
        "ActRate": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        },
        "AfterCompletion": {
          "type": "boolean"
        },
        "AssignmentID": {
          "format": "int32",
          "type": "integer"
        },
        "EstCPU": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        },
        "EstQuantity": {
          "format": "double",
          "type": "number"
        },
        "EstRate": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        },
        "MaterialUnits": {
          "format": "int32",
          "type": "integer"
        },
        "ResourceDescription": {
          "type": "string"
        },
        "ResourceID": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "Units": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "conquest_apiActionCategoryList": {
      "properties": {
        "Items": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiActionCompletionDetails": {
      "properties": {
        "Action": {
          "$ref": "#/definitions/conquest_apiObjectHeader"
        },
        "ActionType": {
          "$ref": "#/definitions/conquest_apiActionType"
        },
        "ActualCost": {
          "$ref": "#/definitions/conquest_apiDecimal"
        },
        "Asset": {
          "$ref": "#/definitions/conquest_apiObjectHeader"
        },
        "CostType": {
          "$ref": "#/definitions/conquest_apiCostType",
          "description": "If there is a database value that the user has put in manually then the CostType shows as Other and the OtherCost shows the cost stored in database. \nThe UI should default to OtherCost if it is set.\nIf there is no database value, the UI should default to the calculated ActualCost."
        },
        "EstimatedCost": {
          "$ref": "#/definitions/conquest_apiDecimal"
        },
        "IsRepeatable": {
          "type": "boolean"
        },
        "OtherCost": {
          "$ref": "#/definitions/conquest_apiDecimal"
        }
      },
      "type": "object"
    },
    "conquest_apiActionCompletionOptions": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "CompletedBy": {
          "description": "CompletedBy is used to choose a different user to the one completing the action.",
          "type": "string"
        },
        "CompletionDate": {
          "format": "date-time",
          "title": "CompletionDate is used to set a completion date other than \"now\"",
          "type": "string"
        },
        "CompletionNotes": {
          "type": "string"
        },
        "CopyDocumentsToSucceedingActions": {
          "title": "CopyDocumentsToSucceedingActions is used to override the preference already set on the action",
          "type": "boolean"
        },
        "CopyUserFieldsToSucceedingActions": {
          "title": "CopyUserFieldsToSucceedingActions is used to override the preference already set on the action",
          "type": "boolean"
        },
        "Cost": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        },
        "CostType": {
          "$ref": "#/definitions/conquest_apiCostType"
        },
        "CyclicProcess": {
          "$ref": "#/definitions/conquest_apiCyclicActionCompletionProcess"
        },
        "DisposalProcess": {
          "$ref": "#/definitions/conquest_apiDisposalActionCompletionProcess"
        },
        "LogBookProcess": {
          "$ref": "#/definitions/conquest_apiLogBookActionCompletionProcess"
        },
        "MarkAsCompleted": {
          "type": "boolean"
        },
        "MasterProcess": {
          "$ref": "#/definitions/conquest_apiMasterActionCompletionProcess"
        },
        "ResponseDate": {
          "format": "date-time",
          "type": "string"
        },
        "SimpleProcess": {
          "$ref": "#/definitions/conquest_apiSimpleActionCompletionProcess"
        },
        "UseDefaultsProcess": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiActionEntity": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "ApprovalRequested": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "AttributeID": {
          "format": "int32",
          "type": "integer"
        },
        "Completed": {
          "type": "boolean"
        },
        "CompletionDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "CreatedBy": {
          "title": "TimestampValue              EntryDate           = 24; is like AddingUser",
          "type": "string"
        },
        "DocumentLocation": {
          "type": "string"
        },
        "EditDate": {
          "format": "date-time",
          "type": "string"
        },
        "Editor": {
          "type": "string"
        },
        "IssueDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "MapStyle": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "Permission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "PreviousAction": {
          "format": "int32",
          "type": "integer"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiActionRecord"
        },
        "ReferenceID": {
          "type": "string"
        },
        "TypeID": {
          "format": "int32",
          "type": "integer"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        }
      },
      "type": "object"
    },
    "conquest_apiActionRecord": {
      "properties": {
        "Account": {
          "type": "string"
        },
        "ActionDescription": {
          "type": "string"
        },
        "ActionNotes": {
          "type": "string"
        },
        "ActionType": {
          "$ref": "#/definitions/conquest_apiActionType"
        },
        "CategoryID": {
          "format": "int32",
          "type": "integer"
        },
        "ContractNumber": {
          "type": "string"
        },
        "ContractorID": {
          "format": "int32",
          "type": "integer"
        },
        "FinishDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "GeometryData": {
          "$ref": "#/definitions/conquest_apiGeometryDataValue"
        },
        "Location": {
          "type": "string"
        },
        "LocationCoordinates": {
          "$ref": "#/definitions/conquest_apiGeographyDataValue",
          "title": "LocationCoordinates is a pin/point that defaults to the centroid on the Action's geography object"
        },
        "LocationID": {
          "format": "int32",
          "type": "integer"
        },
        "NewWorks": {
          "type": "boolean"
        },
        "NextTask": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "OrderNo": {
          "type": "string"
        },
        "OrganisationUnitID": {
          "format": "int32",
          "type": "integer"
        },
        "PO": {
          "type": "string"
        },
        "ParentID": {
          "format": "int32",
          "type": "integer"
        },
        "Rehabilitation": {
          "type": "boolean"
        },
        "Repeatable": {
          "type": "boolean"
        },
        "ResponseDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "Schedules": {
          "$ref": "#/definitions/conquest_apiActionScheduleList"
        },
        "StartDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "Status": {
          "format": "int32",
          "type": "integer"
        },
        "StdActionID": {
          "format": "int32",
          "type": "integer"
        },
        "SubContractorID": {
          "format": "int32",
          "type": "integer"
        },
        "Tasks": {
          "$ref": "#/definitions/conquest_apiActionTaskList"
        },
        "Urgency": {
          "format": "int32",
          "type": "integer"
        },
        "UserCheck1": {
          "type": "boolean"
        },
        "UserCheck10": {
          "type": "boolean"
        },
        "UserCheck11": {
          "type": "boolean"
        },
        "UserCheck12": {
          "type": "boolean"
        },
        "UserCheck13": {
          "type": "boolean"
        },
        "UserCheck14": {
          "type": "boolean"
        },
        "UserCheck15": {
          "type": "boolean"
        },
        "UserCheck16": {
          "type": "boolean"
        },
        "UserCheck17": {
          "type": "boolean"
        },
        "UserCheck18": {
          "type": "boolean"
        },
        "UserCheck19": {
          "type": "boolean"
        },
        "UserCheck2": {
          "type": "boolean"
        },
        "UserCheck20": {
          "type": "boolean"
        },
        "UserCheck21": {
          "type": "boolean"
        },
        "UserCheck22": {
          "type": "boolean"
        },
        "UserCheck23": {
          "type": "boolean"
        },
        "UserCheck24": {
          "type": "boolean"
        },
        "UserCheck25": {
          "type": "boolean"
        },
        "UserCheck26": {
          "type": "boolean"
        },
        "UserCheck27": {
          "type": "boolean"
        },
        "UserCheck28": {
          "type": "boolean"
        },
        "UserCheck29": {
          "type": "boolean"
        },
        "UserCheck3": {
          "type": "boolean"
        },
        "UserCheck30": {
          "type": "boolean"
        },
        "UserCheck4": {
          "type": "boolean"
        },
        "UserCheck5": {
          "type": "boolean"
        },
        "UserCheck6": {
          "type": "boolean"
        },
        "UserCheck7": {
          "type": "boolean"
        },
        "UserCheck8": {
          "type": "boolean"
        },
        "UserCheck9": {
          "type": "boolean"
        },
        "UserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate10": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate11": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate12": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate13": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate14": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate15": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate16": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate17": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate18": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate19": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate20": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate21": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate22": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate23": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate24": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate25": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate26": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate27": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate28": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate29": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate3": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate30": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate4": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate5": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate6": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate7": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate8": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate9": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserList1": {
          "format": "int32",
          "type": "integer"
        },
        "UserList10": {
          "format": "int32",
          "type": "integer"
        },
        "UserList11": {
          "format": "int32",
          "type": "integer"
        },
        "UserList12": {
          "format": "int32",
          "type": "integer"
        },
        "UserList13": {
          "format": "int32",
          "type": "integer"
        },
        "UserList14": {
          "format": "int32",
          "type": "integer"
        },
        "UserList15": {
          "format": "int32",
          "type": "integer"
        },
        "UserList16": {
          "format": "int32",
          "type": "integer"
        },
        "UserList17": {
          "format": "int32",
          "type": "integer"
        },
        "UserList18": {
          "format": "int32",
          "type": "integer"
        },
        "UserList19": {
          "format": "int32",
          "type": "integer"
        },
        "UserList2": {
          "format": "int32",
          "type": "integer"
        },
        "UserList20": {
          "format": "int32",
          "type": "integer"
        },
        "UserList21": {
          "format": "int32",
          "type": "integer"
        },
        "UserList22": {
          "format": "int32",
          "type": "integer"
        },
        "UserList23": {
          "format": "int32",
          "type": "integer"
        },
        "UserList24": {
          "format": "int32",
          "type": "integer"
        },
        "UserList25": {
          "format": "int32",
          "type": "integer"
        },
        "UserList26": {
          "format": "int32",
          "type": "integer"
        },
        "UserList27": {
          "format": "int32",
          "type": "integer"
        },
        "UserList28": {
          "format": "int32",
          "type": "integer"
        },
        "UserList29": {
          "format": "int32",
          "type": "integer"
        },
        "UserList3": {
          "format": "int32",
          "type": "integer"
        },
        "UserList30": {
          "format": "int32",
          "type": "integer"
        },
        "UserList4": {
          "format": "int32",
          "type": "integer"
        },
        "UserList5": {
          "format": "int32",
          "type": "integer"
        },
        "UserList6": {
          "format": "int32",
          "type": "integer"
        },
        "UserList7": {
          "format": "int32",
          "type": "integer"
        },
        "UserList8": {
          "format": "int32",
          "type": "integer"
        },
        "UserList9": {
          "format": "int32",
          "type": "integer"
        },
        "UserNumber1": {
          "format": "double",
          "type": "number"
        },
        "UserNumber10": {
          "format": "double",
          "type": "number"
        },
        "UserNumber11": {
          "format": "double",
          "type": "number"
        },
        "UserNumber12": {
          "format": "double",
          "type": "number"
        },
        "UserNumber13": {
          "format": "double",
          "type": "number"
        },
        "UserNumber14": {
          "format": "double",
          "type": "number"
        },
        "UserNumber15": {
          "format": "double",
          "type": "number"
        },
        "UserNumber16": {
          "format": "double",
          "type": "number"
        },
        "UserNumber17": {
          "format": "double",
          "type": "number"
        },
        "UserNumber18": {
          "format": "double",
          "type": "number"
        },
        "UserNumber19": {
          "format": "double",
          "type": "number"
        },
        "UserNumber2": {
          "format": "double",
          "type": "number"
        },
        "UserNumber20": {
          "format": "double",
          "type": "number"
        },
        "UserNumber21": {
          "format": "double",
          "type": "number"
        },
        "UserNumber22": {
          "format": "double",
          "type": "number"
        },
        "UserNumber23": {
          "format": "double",
          "type": "number"
        },
        "UserNumber24": {
          "format": "double",
          "type": "number"
        },
        "UserNumber25": {
          "format": "double",
          "type": "number"
        },
        "UserNumber26": {
          "format": "double",
          "type": "number"
        },
        "UserNumber27": {
          "format": "double",
          "type": "number"
        },
        "UserNumber28": {
          "format": "double",
          "type": "number"
        },
        "UserNumber29": {
          "format": "double",
          "type": "number"
        },
        "UserNumber3": {
          "format": "double",
          "type": "number"
        },
        "UserNumber30": {
          "format": "double",
          "type": "number"
        },
        "UserNumber4": {
          "format": "double",
          "type": "number"
        },
        "UserNumber5": {
          "format": "double",
          "type": "number"
        },
        "UserNumber6": {
          "format": "double",
          "type": "number"
        },
        "UserNumber7": {
          "format": "double",
          "type": "number"
        },
        "UserNumber8": {
          "format": "double",
          "type": "number"
        },
        "UserNumber9": {
          "format": "double",
          "type": "number"
        },
        "UserText1": {
          "type": "string"
        },
        "UserText10": {
          "type": "string"
        },
        "UserText11": {
          "type": "string"
        },
        "UserText12": {
          "type": "string"
        },
        "UserText13": {
          "type": "string"
        },
        "UserText14": {
          "type": "string"
        },
        "UserText15": {
          "type": "string"
        },
        "UserText16": {
          "type": "string"
        },
        "UserText17": {
          "type": "string"
        },
        "UserText18": {
          "type": "string"
        },
        "UserText19": {
          "type": "string"
        },
        "UserText2": {
          "type": "string"
        },
        "UserText20": {
          "type": "string"
        },
        "UserText21": {
          "type": "string"
        },
        "UserText22": {
          "type": "string"
        },
        "UserText23": {
          "type": "string"
        },
        "UserText24": {
          "type": "string"
        },
        "UserText25": {
          "type": "string"
        },
        "UserText26": {
          "type": "string"
        },
        "UserText27": {
          "type": "string"
        },
        "UserText28": {
          "type": "string"
        },
        "UserText29": {
          "type": "string"
        },
        "UserText3": {
          "type": "string"
        },
        "UserText30": {
          "type": "string"
        },
        "UserText4": {
          "type": "string"
        },
        "UserText5": {
          "type": "string"
        },
        "UserText6": {
          "type": "string"
        },
        "UserText7": {
          "type": "string"
        },
        "UserText8": {
          "type": "string"
        },
        "UserText9": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiActionRecordChangeSet": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "Changes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiActionRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiActionRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiActionSchedule": {
      "properties": {
        "ActionDate": {
          "format": "date-time",
          "type": "string"
        },
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "Cycles": {
          "format": "int32",
          "type": "integer"
        },
        "Duration": {
          "format": "int32",
          "type": "integer"
        },
        "OriginalActionDate": {
          "format": "date-time",
          "title": "The OriginalActionDate is only readOnly for the client",
          "type": "string"
        },
        "RepeatCycleUnits": {
          "$ref": "#/definitions/conquest_apiRepeatCycleUnits"
        },
        "ScheduleType": {
          "$ref": "#/definitions/conquest_apiActionScheduleType"
        }
      },
      "type": "object"
    },
    "conquest_apiActionScheduleList": {
      "properties": {
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiActionSchedule"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiActionScheduleType": {
      "default": "ActionScheduleType_Limited",
      "enum": [
        "ActionScheduleType_Limited",
        "ActionScheduleType_UnlimitedFromStart",
        "ActionScheduleType_UnlimitedFromCompletion"
      ],
      "type": "string"
    },
    "conquest_apiActionTask": {
      "properties": {
        "ActionAssignments": {
          "items": {
            "$ref": "#/definitions/conquest_apiActionAssignment"
          },
          "type": "array"
        },
        "Duration": {
          "format": "double",
          "type": "number"
        },
        "Ordr": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "TaskID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiActionTaskList": {
      "properties": {
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiActionTask"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiActionType": {
      "default": "ActionType_Unscheduled",
      "enum": [
        "ActionType_Unscheduled",
        "ActionType_Scheduled",
        "ActionType_Cyclic",
        "ActionType_Disposal",
        "ActionType_LogBook",
        "ActionType_NewWorks",
        "ActionType_Purchase",
        "ActionType_Warranty",
        "ActionType_Litigation",
        "ActionType_Planned",
        "ActionType_Project",
        "ActionType_Master",
        "ActionType_Unknown"
      ],
      "type": "string"
    },
    "conquest_apiAddDiaryResult": {
      "properties": {
        "Document": {
          "$ref": "#/definitions/conquest_apiDocument",
          "title": "The Document for a Diary will have ContentType = application/vnd.conquest.diarynote+markdown"
        }
      },
      "type": "object"
    },
    "conquest_apiAddDocumentCommand": {
      "description": "AddDocumentCommand works in two steps, first you add a record using this command.\n\nIf content must be uploaded, see AddDocumentResult, it contains parameters required for an uploading data:\n- UploadMethod\n- UploadURI\n- UploadHeaders",
      "properties": {
        "Address": {
          "description": "Address is a URI with a supported scheme (blob://, file://, https://, conquest://, trim://).\n\nAddresses tell the server in what location a document should be put. Use ListDocumentLocationsQuery to list available locations.\n\nLocations are pre-defined and are identified by prefixes, which are of the form \"{scheme}://{location-name}\".\n\nThe default location, known as the \"System Document Directory\" is\n\n- \"file://conquest_documents/\" for site installations\n\n- \"blob://default/\" for cloud installations (the location name may differ).\n\nWhen choosing an address, prefix it with a known location, followed by a relative path. For example:\n\n     \"blob://default/Assets/1/receipt.txt\"\n\nAfter a successful upload, reference this document using both the ObjectKey and the returned Document.DocumentID when using the download endpoint. For example:\n\n     \"/download/document?object_type=...\u0026object_id=...\u0026document_id=...\"\n\nThis endpoint may redirect you to a download (by providing an address in the Location header).\n\nTRIM:\n\nThe server identifies that it is TRIM file upload by looking at the Address starting with \"trim://\"\n\n- For new TRIM file, Address - \"trim://new-file\"\n\n     While uploading a new TRIM file, the AddDocumentCommand returns with a TRIM blob url location to upload the selected file.\n\n- For existing TRIM file, Address - trim://{RecordNumber}\n\n     The existing TRIM file is same as a document link in the database",
          "type": "string"
        },
        "ContentLength": {
          "format": "int64",
          "type": "string"
        },
        "ContentType": {
          "type": "string"
        },
        "CreateTime": {
          "description": "CreateTime is unique. When adding a document, there is no DocumentID yet, the CreateTime should be used as a key until the DocumentID is retrieved.",
          "format": "date-time",
          "type": "string"
        },
        "DocumentDescription": {
          "type": "string"
        },
        "Hashes": {
          "description": "A list of calculated hashes / checksum of the file to be uploaded.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "LinkExistingDocument": {
          "title": "When you wish to reference a document that will not be uploaded, set LinkExistingDocument to true and provide an Address",
          "type": "boolean"
        },
        "LocationPrefix": {
          "description": "Locations are pre-defined and are identified by prefixes, which are of the form \"{scheme}://{location-name}\".\n\nPrefixes are chosen by the client in a picker",
          "type": "string"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "description": "ObjectKey (please reference the ObjectKey documentation)."
        }
      },
      "type": "object"
    },
    "conquest_apiAddDocumentResult": {
      "description": "AddDocumentResult returns the saved Document record and the location (UploadMethod \u0026 UploadUri) of where the actual file should be pushed (POST/PUT).\n\nThe location may point to the API server itself, or a configured blob storage service.\n\nThis location is valid for a period of time or until the upload has completed. Whichever is earliest.\n\nWhen a client performs an upload, it prepares a request that will write the file to the provided location. If the location *may* require credentials.",
      "properties": {
        "Document": {
          "$ref": "#/definitions/conquest_apiDocument"
        },
        "UploadExpireTime": {
          "format": "date-time",
          "type": "string"
        },
        "UploadHeaders": {
          "additionalProperties": {
            "type": "string"
          },
          "title": "UploadHeaders returns some required headers, like \"x-ms-blob-type: BlockBlob\" for azure uploads",
          "type": "object"
        },
        "UploadMethod": {
          "title": "POST for a web form or PUT to just push the data",
          "type": "string"
        },
        "UploadUri": {
          "description": "UploadUri is where you must post the UploadData.\nIt is a multipart HTTP upload with the field \"document\"\nfor which the document is uploaded to.\n\nFor example, you can upload 'inspection-photo.png' like this for a standard web form\n```\n  curl -i -X POST -H \"Content-Type: multipart/form-data\" -F \"document=@inspection-photo.png\" \"${ApiHost}${UploadUri}\"\n```\n\nAlternatively, use if no metadata needs to be submitted.\n```\n  curl --upload-file \"${ApiHost}${UploadUri}\"\n```\n\nIf the Uri is relative, prefix it with the api origin.\n\nUploadUri will be empty if:\n- The Added Document was a link to an existing document (LinkExistingDocument=true)\n- The Document Link is not relative to one of the Document Locations (see GetHierarchyNodesQuery{ObjectType=DocumentContainer})",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiAddGeoUpdateCommand": {
      "properties": {
        "Overwrite": {
          "type": "boolean"
        },
        "XDontStart": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiAddNewCsvImportCommand": {
      "properties": {
        "filename": {
          "type": "string"
        },
        "import_type": {
          "title": "import_type\nValid Values are:\n    Action, Asset, Defect, Request, AssetInspection, RiskEvent, LogBook",
          "type": "string"
        },
        "user_filename": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiAddNewGeoPackageImportCommand": {
      "properties": {
        "filename": {
          "type": "string"
        },
        "table_options": {
          "$ref": "#/definitions/conquest_apiGeoPackageTableDescriptionOptions"
        },
        "user_filename": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiAnyValue": {
      "properties": {
        "booleanValue": {
          "type": "boolean"
        },
        "codeValue": {
          "format": "int32",
          "type": "integer"
        },
        "dateTimeValue": {
          "format": "date-time",
          "type": "string"
        },
        "dateValue": {
          "format": "date-time",
          "type": "string"
        },
        "decimalValue": {
          "$ref": "#/definitions/conquest_apiDecimal"
        },
        "enumerationValue": {
          "format": "int32",
          "type": "integer"
        },
        "geographyDataValue": {
          "$ref": "#/definitions/conquest_apiGeographyData"
        },
        "geometryDataValue": {
          "$ref": "#/definitions/conquest_apiGeometryData"
        },
        "hierarchyValue": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "int32Value": {
          "format": "int32",
          "type": "integer"
        },
        "int64Value": {
          "format": "int64",
          "type": "string"
        },
        "nBooleanValue": {
          "type": "boolean"
        },
        "nCodeValue": {
          "format": "int32",
          "type": "integer"
        },
        "nDateTimeValue": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "nDateValue": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "nDecimalValue": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        },
        "nEnumerationValue": {
          "format": "int32",
          "type": "integer"
        },
        "nGeographyDataValue": {
          "$ref": "#/definitions/conquest_apiGeographyDataValue"
        },
        "nGeometryDataValue": {
          "$ref": "#/definitions/conquest_apiGeometryDataValue"
        },
        "nHierarchyValue": {
          "$ref": "#/definitions/conquest_apiObjectKeyValue"
        },
        "nInt32Value": {
          "format": "int32",
          "type": "integer"
        },
        "nInt64Value": {
          "format": "int64",
          "type": "string"
        },
        "nNumberValue": {
          "format": "double",
          "type": "number"
        },
        "nObjectKeyValue": {
          "$ref": "#/definitions/conquest_apiObjectKeyValue"
        },
        "nStringValue": {
          "type": "string"
        },
        "numberValue": {
          "format": "double",
          "type": "number"
        },
        "objectKeyValue": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "stringListValue": {
          "$ref": "#/definitions/conquest_apiStringListValue"
        },
        "stringValue": {
          "type": "string"
        },
        "styleValue": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "unknownValue": {
          "type": "boolean"
        }
      },
      "title": "Each field corresponds to exactly ValueType\nFor example:\n  stringValue and nStringValue (nullable) is for ValueType_String",
      "type": "object"
    },
    "conquest_apiApplyStandardActionCommand": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "Overwrite": {
          "type": "boolean"
        },
        "OverwriteOptions": {
          "$ref": "#/definitions/conquest_apiApplyStandardActionOverwriteOptions"
        },
        "StdActionID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiApplyStandardActionOverwriteOptions": {
      "properties": {
        "Account": {
          "type": "boolean"
        },
        "ActionCategory": {
          "type": "boolean"
        },
        "ActionDescription": {
          "type": "boolean"
        },
        "ActionNotes": {
          "type": "boolean"
        },
        "ActionType": {
          "type": "boolean"
        },
        "AssignTo": {
          "type": "boolean"
        },
        "Urgency": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiAssetEntity": {
      "properties": {
        "ActionPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "AddingDate": {
          "format": "date-time",
          "type": "string"
        },
        "AddingUser": {
          "type": "string"
        },
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "AttributeID": {
          "format": "int32",
          "title": "AttributeID for the AttributeSet configured on the AssetType",
          "type": "integer"
        },
        "DefectPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "DocumentLocation": {
          "type": "string"
        },
        "EditDate": {
          "format": "date-time",
          "type": "string"
        },
        "Editor": {
          "type": "string"
        },
        "Hyperlinks": {
          "$ref": "#/definitions/conquest_apiCustomHyperlinkList"
        },
        "Inspection": {
          "$ref": "#/definitions/conquest_apiInspectionRecord"
        },
        "InspectionID": {
          "format": "int32",
          "type": "integer"
        },
        "MapStyle": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "ParentID": {
          "format": "int32",
          "title": "ParentID is 0 if this is a Facility",
          "type": "integer"
        },
        "Permission": {
          "$ref": "#/definitions/conquest_apiPermission",
          "title": "string FamilyCode = 49;"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiAssetRecord"
        },
        "ReplacedAsset": {
          "format": "int32",
          "type": "integer"
        },
        "RetirementDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "RetirementReason": {
          "type": "string"
        },
        "RetirementUser": {
          "type": "string"
        },
        "SplitAssetID": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "type": "string"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        }
      },
      "title": "AssetEntity is comprised of the Asset's Record and auxiliary fields (calculated, related)",
      "type": "object"
    },
    "conquest_apiAssetInspectionEntity": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "AssetInspectionID": {
          "format": "int32",
          "type": "integer"
        },
        "AttributeID": {
          "format": "int32",
          "type": "integer"
        },
        "DocumentLocation": {
          "type": "string"
        },
        "EditDate": {
          "format": "date-time",
          "type": "string"
        },
        "Editor": {
          "type": "string"
        },
        "InspectionID": {
          "format": "int32",
          "type": "integer"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiAssetInspectionRecord"
        },
        "StdInspectionID": {
          "format": "int32",
          "type": "integer"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        }
      },
      "title": "AssetInspectionEntity is comprised of the Asset Inspection's Record and auxiliary fields (calculated, related)",
      "type": "object"
    },
    "conquest_apiAssetInspectionRecord": {
      "description": "DefectRecord is a selection of fields that may be modified directly.",
      "properties": {
        "Inspection": {
          "$ref": "#/definitions/conquest_apiInspectionRecord"
        },
        "UserCheck1": {
          "type": "boolean"
        },
        "UserCheck10": {
          "type": "boolean"
        },
        "UserCheck11": {
          "type": "boolean"
        },
        "UserCheck12": {
          "type": "boolean"
        },
        "UserCheck13": {
          "type": "boolean"
        },
        "UserCheck14": {
          "type": "boolean"
        },
        "UserCheck15": {
          "type": "boolean"
        },
        "UserCheck16": {
          "type": "boolean"
        },
        "UserCheck17": {
          "type": "boolean"
        },
        "UserCheck18": {
          "type": "boolean"
        },
        "UserCheck19": {
          "type": "boolean"
        },
        "UserCheck2": {
          "type": "boolean"
        },
        "UserCheck20": {
          "type": "boolean"
        },
        "UserCheck21": {
          "type": "boolean"
        },
        "UserCheck22": {
          "type": "boolean"
        },
        "UserCheck23": {
          "type": "boolean"
        },
        "UserCheck24": {
          "type": "boolean"
        },
        "UserCheck25": {
          "type": "boolean"
        },
        "UserCheck26": {
          "type": "boolean"
        },
        "UserCheck27": {
          "type": "boolean"
        },
        "UserCheck28": {
          "type": "boolean"
        },
        "UserCheck29": {
          "type": "boolean"
        },
        "UserCheck3": {
          "type": "boolean"
        },
        "UserCheck30": {
          "type": "boolean"
        },
        "UserCheck4": {
          "type": "boolean"
        },
        "UserCheck5": {
          "type": "boolean"
        },
        "UserCheck6": {
          "type": "boolean"
        },
        "UserCheck7": {
          "type": "boolean"
        },
        "UserCheck8": {
          "type": "boolean"
        },
        "UserCheck9": {
          "type": "boolean"
        },
        "UserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate10": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate11": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate12": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate13": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate14": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate15": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate16": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate17": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate18": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate19": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate20": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate21": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate22": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate23": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate24": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate25": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate26": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate27": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate28": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate29": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate3": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate30": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate4": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate5": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate6": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate7": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate8": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate9": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserList1": {
          "format": "int32",
          "type": "integer"
        },
        "UserList10": {
          "format": "int32",
          "type": "integer"
        },
        "UserList11": {
          "format": "int32",
          "type": "integer"
        },
        "UserList12": {
          "format": "int32",
          "type": "integer"
        },
        "UserList13": {
          "format": "int32",
          "type": "integer"
        },
        "UserList14": {
          "format": "int32",
          "type": "integer"
        },
        "UserList15": {
          "format": "int32",
          "type": "integer"
        },
        "UserList16": {
          "format": "int32",
          "type": "integer"
        },
        "UserList17": {
          "format": "int32",
          "type": "integer"
        },
        "UserList18": {
          "format": "int32",
          "type": "integer"
        },
        "UserList19": {
          "format": "int32",
          "type": "integer"
        },
        "UserList2": {
          "format": "int32",
          "type": "integer"
        },
        "UserList20": {
          "format": "int32",
          "type": "integer"
        },
        "UserList21": {
          "format": "int32",
          "type": "integer"
        },
        "UserList22": {
          "format": "int32",
          "type": "integer"
        },
        "UserList23": {
          "format": "int32",
          "type": "integer"
        },
        "UserList24": {
          "format": "int32",
          "type": "integer"
        },
        "UserList25": {
          "format": "int32",
          "type": "integer"
        },
        "UserList26": {
          "format": "int32",
          "type": "integer"
        },
        "UserList27": {
          "format": "int32",
          "type": "integer"
        },
        "UserList28": {
          "format": "int32",
          "type": "integer"
        },
        "UserList29": {
          "format": "int32",
          "type": "integer"
        },
        "UserList3": {
          "format": "int32",
          "type": "integer"
        },
        "UserList30": {
          "format": "int32",
          "type": "integer"
        },
        "UserList4": {
          "format": "int32",
          "type": "integer"
        },
        "UserList5": {
          "format": "int32",
          "type": "integer"
        },
        "UserList6": {
          "format": "int32",
          "type": "integer"
        },
        "UserList7": {
          "format": "int32",
          "type": "integer"
        },
        "UserList8": {
          "format": "int32",
          "type": "integer"
        },
        "UserList9": {
          "format": "int32",
          "type": "integer"
        },
        "UserNumber1": {
          "format": "double",
          "type": "number"
        },
        "UserNumber10": {
          "format": "double",
          "type": "number"
        },
        "UserNumber11": {
          "format": "double",
          "type": "number"
        },
        "UserNumber12": {
          "format": "double",
          "type": "number"
        },
        "UserNumber13": {
          "format": "double",
          "type": "number"
        },
        "UserNumber14": {
          "format": "double",
          "type": "number"
        },
        "UserNumber15": {
          "format": "double",
          "type": "number"
        },
        "UserNumber16": {
          "format": "double",
          "type": "number"
        },
        "UserNumber17": {
          "format": "double",
          "type": "number"
        },
        "UserNumber18": {
          "format": "double",
          "type": "number"
        },
        "UserNumber19": {
          "format": "double",
          "type": "number"
        },
        "UserNumber2": {
          "format": "double",
          "type": "number"
        },
        "UserNumber20": {
          "format": "double",
          "type": "number"
        },
        "UserNumber21": {
          "format": "double",
          "type": "number"
        },
        "UserNumber22": {
          "format": "double",
          "type": "number"
        },
        "UserNumber23": {
          "format": "double",
          "type": "number"
        },
        "UserNumber24": {
          "format": "double",
          "type": "number"
        },
        "UserNumber25": {
          "format": "double",
          "type": "number"
        },
        "UserNumber26": {
          "format": "double",
          "type": "number"
        },
        "UserNumber27": {
          "format": "double",
          "type": "number"
        },
        "UserNumber28": {
          "format": "double",
          "type": "number"
        },
        "UserNumber29": {
          "format": "double",
          "type": "number"
        },
        "UserNumber3": {
          "format": "double",
          "type": "number"
        },
        "UserNumber30": {
          "format": "double",
          "type": "number"
        },
        "UserNumber4": {
          "format": "double",
          "type": "number"
        },
        "UserNumber5": {
          "format": "double",
          "type": "number"
        },
        "UserNumber6": {
          "format": "double",
          "type": "number"
        },
        "UserNumber7": {
          "format": "double",
          "type": "number"
        },
        "UserNumber8": {
          "format": "double",
          "type": "number"
        },
        "UserNumber9": {
          "format": "double",
          "type": "number"
        },
        "UserText1": {
          "type": "string"
        },
        "UserText10": {
          "type": "string"
        },
        "UserText11": {
          "type": "string"
        },
        "UserText12": {
          "type": "string"
        },
        "UserText13": {
          "type": "string"
        },
        "UserText14": {
          "type": "string"
        },
        "UserText15": {
          "type": "string"
        },
        "UserText16": {
          "type": "string"
        },
        "UserText17": {
          "type": "string"
        },
        "UserText18": {
          "type": "string"
        },
        "UserText19": {
          "type": "string"
        },
        "UserText2": {
          "type": "string"
        },
        "UserText20": {
          "type": "string"
        },
        "UserText21": {
          "type": "string"
        },
        "UserText22": {
          "type": "string"
        },
        "UserText23": {
          "type": "string"
        },
        "UserText24": {
          "type": "string"
        },
        "UserText25": {
          "type": "string"
        },
        "UserText26": {
          "type": "string"
        },
        "UserText27": {
          "type": "string"
        },
        "UserText28": {
          "type": "string"
        },
        "UserText29": {
          "type": "string"
        },
        "UserText3": {
          "type": "string"
        },
        "UserText30": {
          "type": "string"
        },
        "UserText4": {
          "type": "string"
        },
        "UserText5": {
          "type": "string"
        },
        "UserText6": {
          "type": "string"
        },
        "UserText7": {
          "type": "string"
        },
        "UserText8": {
          "type": "string"
        },
        "UserText9": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiAssetInspectionRecordChangeSet": {
      "properties": {
        "AssetInspectionID": {
          "format": "int32",
          "type": "integer"
        },
        "Changes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiAssetInspectionRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiAssetInspectionRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiAssetRecord": {
      "properties": {
        "AccountNo": {
          "type": "string"
        },
        "ActualAge": {
          "type": "boolean"
        },
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "AssetDescription": {
          "type": "string"
        },
        "AssetNotes": {
          "type": "string"
        },
        "Attribute1": {
          "format": "int32",
          "type": "integer"
        },
        "Attribute10": {
          "format": "int32",
          "type": "integer"
        },
        "Attribute2": {
          "format": "int32",
          "type": "integer"
        },
        "Attribute3": {
          "format": "int32",
          "type": "integer"
        },
        "Attribute4": {
          "format": "int32",
          "type": "integer"
        },
        "Attribute5": {
          "format": "int32",
          "type": "integer"
        },
        "Attribute6": {
          "format": "int32",
          "type": "integer"
        },
        "Attribute7": {
          "format": "int32",
          "type": "integer"
        },
        "Attribute8": {
          "format": "int32",
          "type": "integer"
        },
        "Attribute9": {
          "format": "int32",
          "type": "integer"
        },
        "BarCode": {
          "type": "string"
        },
        "BusinessID": {
          "type": "string"
        },
        "Condition": {
          "format": "int32",
          "type": "integer"
        },
        "ConditionPoint": {
          "format": "double",
          "type": "number"
        },
        "DCID": {
          "format": "int32",
          "title": "DCID is the Deterioration Curve ID",
          "type": "integer"
        },
        "DateAcquired": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "DepartmentID": {
          "format": "int32",
          "type": "integer"
        },
        "Dimension1": {
          "format": "double",
          "type": "number"
        },
        "Dimension2": {
          "format": "double",
          "type": "number"
        },
        "Dimension3": {
          "format": "double",
          "type": "number"
        },
        "Dimension4": {
          "format": "double",
          "type": "number"
        },
        "Dimension5": {
          "format": "double",
          "type": "number"
        },
        "Dimension6": {
          "format": "double",
          "type": "number"
        },
        "Dimension7": {
          "format": "double",
          "type": "number"
        },
        "Dimension8": {
          "format": "double",
          "type": "number"
        },
        "Environment1": {
          "format": "int32",
          "type": "integer"
        },
        "Environment2": {
          "format": "int32",
          "type": "integer"
        },
        "Environment3": {
          "format": "int32",
          "type": "integer"
        },
        "Environment4": {
          "format": "int32",
          "type": "integer"
        },
        "Environment5": {
          "format": "int32",
          "type": "integer"
        },
        "Environment6": {
          "format": "int32",
          "type": "integer"
        },
        "Environment7": {
          "format": "int32",
          "type": "integer"
        },
        "Environment8": {
          "format": "int32",
          "type": "integer"
        },
        "Expiry": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "FunctionID": {
          "format": "int32",
          "title": "EXPERIMENTAL: Changing the FunctionID is a Key Parameter for a Valuation type.\nKey Parameter changes may require the Expiry Date to be updated",
          "type": "integer"
        },
        "GeometryData": {
          "$ref": "#/definitions/conquest_apiGeometryDataValue"
        },
        "Location": {
          "type": "string"
        },
        "LocationCoordinates": {
          "$ref": "#/definitions/conquest_apiGeographyDataValue",
          "title": "LocationCoordinates is a pin/point that defaults to the centroid on the Asset's geography object"
        },
        "LocationID": {
          "format": "int32",
          "type": "integer"
        },
        "LogAction": {
          "format": "int32",
          "type": "integer"
        },
        "LogBookID": {
          "format": "int32",
          "type": "integer"
        },
        "ManCalcCnd": {
          "type": "boolean"
        },
        "Measurement": {
          "format": "double",
          "type": "number"
        },
        "OwnedBy": {
          "format": "int32",
          "type": "integer"
        },
        "Param1": {
          "format": "int32",
          "type": "integer"
        },
        "Param2": {
          "format": "int32",
          "type": "integer"
        },
        "Param3": {
          "format": "int32",
          "type": "integer"
        },
        "Param4": {
          "format": "int32",
          "type": "integer"
        },
        "Param5": {
          "format": "int32",
          "type": "integer"
        },
        "Param6": {
          "format": "int32",
          "type": "integer"
        },
        "Param7": {
          "format": "int32",
          "type": "integer"
        },
        "Param8": {
          "format": "int32",
          "type": "integer"
        },
        "Postcode": {
          "type": "string"
        },
        "PriorityPoint": {
          "format": "double",
          "type": "number"
        },
        "Renew": {
          "type": "boolean"
        },
        "RenewBy": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "State": {
          "type": "string"
        },
        "Suburb": {
          "type": "string"
        },
        "SysUserCheck1": {
          "type": "boolean"
        },
        "SysUserCheck2": {
          "type": "boolean"
        },
        "SysUserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "SysUserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "SysUserHierarchy1": {
          "format": "int32",
          "type": "integer"
        },
        "SysUserHierarchy2": {
          "format": "int32",
          "type": "integer"
        },
        "SysUserList1": {
          "format": "int32",
          "type": "integer"
        },
        "SysUserList2": {
          "format": "int32",
          "type": "integer"
        },
        "SysUserList3": {
          "format": "int32",
          "type": "integer"
        },
        "SysUserList4": {
          "format": "int32",
          "type": "integer"
        },
        "SysUserNumber1": {
          "format": "double",
          "type": "number"
        },
        "SysUserNumber2": {
          "format": "double",
          "type": "number"
        },
        "SysUserText1": {
          "type": "string"
        },
        "SysUserText2": {
          "type": "string"
        },
        "SysUserText3": {
          "type": "string"
        },
        "SysUserText4": {
          "type": "string"
        },
        "SysUserText5": {
          "type": "string"
        },
        "SysUserText6": {
          "type": "string"
        },
        "SysUserText7": {
          "type": "string"
        },
        "SysUserText8": {
          "type": "string"
        },
        "TypeID": {
          "description": "To change the Asset Type for a valuation type, use the ChangeAssetTypeCommand.",
          "format": "int32",
          "type": "integer"
        },
        "UserCheck1": {
          "type": "boolean"
        },
        "UserCheck10": {
          "type": "boolean"
        },
        "UserCheck11": {
          "type": "boolean"
        },
        "UserCheck12": {
          "type": "boolean"
        },
        "UserCheck13": {
          "type": "boolean"
        },
        "UserCheck14": {
          "type": "boolean"
        },
        "UserCheck15": {
          "type": "boolean"
        },
        "UserCheck16": {
          "type": "boolean"
        },
        "UserCheck17": {
          "type": "boolean"
        },
        "UserCheck18": {
          "type": "boolean"
        },
        "UserCheck19": {
          "type": "boolean"
        },
        "UserCheck2": {
          "type": "boolean"
        },
        "UserCheck20": {
          "type": "boolean"
        },
        "UserCheck21": {
          "type": "boolean"
        },
        "UserCheck22": {
          "type": "boolean"
        },
        "UserCheck23": {
          "type": "boolean"
        },
        "UserCheck24": {
          "type": "boolean"
        },
        "UserCheck25": {
          "type": "boolean"
        },
        "UserCheck26": {
          "type": "boolean"
        },
        "UserCheck27": {
          "type": "boolean"
        },
        "UserCheck28": {
          "type": "boolean"
        },
        "UserCheck29": {
          "type": "boolean"
        },
        "UserCheck3": {
          "type": "boolean"
        },
        "UserCheck30": {
          "type": "boolean"
        },
        "UserCheck4": {
          "type": "boolean"
        },
        "UserCheck5": {
          "type": "boolean"
        },
        "UserCheck6": {
          "type": "boolean"
        },
        "UserCheck7": {
          "type": "boolean"
        },
        "UserCheck8": {
          "type": "boolean"
        },
        "UserCheck9": {
          "type": "boolean"
        },
        "UserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate10": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate11": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate12": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate13": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate14": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate15": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate16": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate17": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate18": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate19": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate20": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate21": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate22": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate23": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate24": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate25": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate26": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate27": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate28": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate29": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate3": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate30": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate4": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate5": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate6": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate7": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate8": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate9": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserList1": {
          "format": "int32",
          "type": "integer"
        },
        "UserList10": {
          "format": "int32",
          "type": "integer"
        },
        "UserList11": {
          "format": "int32",
          "type": "integer"
        },
        "UserList12": {
          "format": "int32",
          "type": "integer"
        },
        "UserList13": {
          "format": "int32",
          "type": "integer"
        },
        "UserList14": {
          "format": "int32",
          "type": "integer"
        },
        "UserList15": {
          "format": "int32",
          "type": "integer"
        },
        "UserList16": {
          "format": "int32",
          "type": "integer"
        },
        "UserList17": {
          "format": "int32",
          "type": "integer"
        },
        "UserList18": {
          "format": "int32",
          "type": "integer"
        },
        "UserList19": {
          "format": "int32",
          "type": "integer"
        },
        "UserList2": {
          "format": "int32",
          "type": "integer"
        },
        "UserList20": {
          "format": "int32",
          "type": "integer"
        },
        "UserList21": {
          "format": "int32",
          "type": "integer"
        },
        "UserList22": {
          "format": "int32",
          "type": "integer"
        },
        "UserList23": {
          "format": "int32",
          "type": "integer"
        },
        "UserList24": {
          "format": "int32",
          "type": "integer"
        },
        "UserList25": {
          "format": "int32",
          "type": "integer"
        },
        "UserList26": {
          "format": "int32",
          "type": "integer"
        },
        "UserList27": {
          "format": "int32",
          "type": "integer"
        },
        "UserList28": {
          "format": "int32",
          "type": "integer"
        },
        "UserList29": {
          "format": "int32",
          "type": "integer"
        },
        "UserList3": {
          "format": "int32",
          "type": "integer"
        },
        "UserList30": {
          "format": "int32",
          "type": "integer"
        },
        "UserList4": {
          "format": "int32",
          "type": "integer"
        },
        "UserList5": {
          "format": "int32",
          "type": "integer"
        },
        "UserList6": {
          "format": "int32",
          "type": "integer"
        },
        "UserList7": {
          "format": "int32",
          "type": "integer"
        },
        "UserList8": {
          "format": "int32",
          "type": "integer"
        },
        "UserList9": {
          "format": "int32",
          "type": "integer"
        },
        "UserNumber1": {
          "format": "double",
          "type": "number"
        },
        "UserNumber10": {
          "format": "double",
          "type": "number"
        },
        "UserNumber11": {
          "format": "double",
          "type": "number"
        },
        "UserNumber12": {
          "format": "double",
          "type": "number"
        },
        "UserNumber13": {
          "format": "double",
          "type": "number"
        },
        "UserNumber14": {
          "format": "double",
          "type": "number"
        },
        "UserNumber15": {
          "format": "double",
          "type": "number"
        },
        "UserNumber16": {
          "format": "double",
          "type": "number"
        },
        "UserNumber17": {
          "format": "double",
          "type": "number"
        },
        "UserNumber18": {
          "format": "double",
          "type": "number"
        },
        "UserNumber19": {
          "format": "double",
          "type": "number"
        },
        "UserNumber2": {
          "format": "double",
          "type": "number"
        },
        "UserNumber20": {
          "format": "double",
          "type": "number"
        },
        "UserNumber21": {
          "format": "double",
          "type": "number"
        },
        "UserNumber22": {
          "format": "double",
          "type": "number"
        },
        "UserNumber23": {
          "format": "double",
          "type": "number"
        },
        "UserNumber24": {
          "format": "double",
          "type": "number"
        },
        "UserNumber25": {
          "format": "double",
          "type": "number"
        },
        "UserNumber26": {
          "format": "double",
          "type": "number"
        },
        "UserNumber27": {
          "format": "double",
          "type": "number"
        },
        "UserNumber28": {
          "format": "double",
          "type": "number"
        },
        "UserNumber29": {
          "format": "double",
          "type": "number"
        },
        "UserNumber3": {
          "format": "double",
          "type": "number"
        },
        "UserNumber30": {
          "format": "double",
          "type": "number"
        },
        "UserNumber4": {
          "format": "double",
          "type": "number"
        },
        "UserNumber5": {
          "format": "double",
          "type": "number"
        },
        "UserNumber6": {
          "format": "double",
          "type": "number"
        },
        "UserNumber7": {
          "format": "double",
          "type": "number"
        },
        "UserNumber8": {
          "format": "double",
          "type": "number"
        },
        "UserNumber9": {
          "format": "double",
          "type": "number"
        },
        "UserText1": {
          "type": "string"
        },
        "UserText10": {
          "type": "string"
        },
        "UserText11": {
          "type": "string"
        },
        "UserText12": {
          "type": "string"
        },
        "UserText13": {
          "type": "string"
        },
        "UserText14": {
          "type": "string"
        },
        "UserText15": {
          "type": "string"
        },
        "UserText16": {
          "type": "string"
        },
        "UserText17": {
          "type": "string"
        },
        "UserText18": {
          "type": "string"
        },
        "UserText19": {
          "type": "string"
        },
        "UserText2": {
          "type": "string"
        },
        "UserText20": {
          "type": "string"
        },
        "UserText21": {
          "type": "string"
        },
        "UserText22": {
          "type": "string"
        },
        "UserText23": {
          "type": "string"
        },
        "UserText24": {
          "type": "string"
        },
        "UserText25": {
          "type": "string"
        },
        "UserText26": {
          "type": "string"
        },
        "UserText27": {
          "type": "string"
        },
        "UserText28": {
          "type": "string"
        },
        "UserText29": {
          "type": "string"
        },
        "UserText3": {
          "type": "string"
        },
        "UserText30": {
          "type": "string"
        },
        "UserText4": {
          "type": "string"
        },
        "UserText5": {
          "type": "string"
        },
        "UserText6": {
          "type": "string"
        },
        "UserText7": {
          "type": "string"
        },
        "UserText8": {
          "type": "string"
        },
        "UserText9": {
          "type": "string"
        },
        "Warrantor": {
          "type": "string"
        },
        "WarrantyExpiry": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "YearCreated": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        }
      },
      "title": "AssetRecord is a selection of fields that may be modified directly.\nTODO: Risk, Valuation fields are omitted, they will be introduced later",
      "type": "object"
    },
    "conquest_apiAssetRecordChangeSet": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "Changes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiAssetRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiAssetRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiAssetTypeEntity": {
      "properties": {
        "AttributeID": {
          "format": "int32",
          "type": "integer"
        },
        "DocumentLocation": {
          "type": "string"
        },
        "FieldDescriptions": {
          "$ref": "#/definitions/conquest_apiFieldDescriptions"
        },
        "ParentID": {
          "format": "int32",
          "title": "ParentID is 0 if this is a Facility",
          "type": "integer"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiAssetTypeRecord"
        },
        "TypeID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiAssetTypeRecord": {
      "properties": {
        "Hyperlinks": {
          "$ref": "#/definitions/conquest_apiCustomHyperlinkList"
        },
        "MapStyle": {
          "$ref": "#/definitions/conquest_apiStyle",
          "title": "Style DefectCompletedMapStyle = 7;\ngoogle.protobuf.StringValue DefectMapLayer = 8;\nStyle DefectMapStyle = 9;\ngoogle.protobuf.StringValue MapDimension = 27;\ngoogle.protobuf.StringValue MapLayer = 28;"
        },
        "TypeDescription": {
          "type": "string"
        },
        "TypeNotes": {
          "type": "string"
        },
        "TypeUserText1": {
          "type": "string"
        },
        "TypeUserText2": {
          "type": "string"
        },
        "ValItem": {
          "title": "google.protobuf.StringValue CycleUnits = 5;\nbool DepItem = 10;\nstring DepMethod = 11;\ngoogle.protobuf.Int32Value DimValBy = 13;\ngoogle.protobuf.Int32Value EndCondition = 15;\ngoogle.protobuf.DoubleValue InspectionCycle = 21;\ngoogle.protobuf.Int32Value ModelLife = 30;\nbool MaintItem = 26;\nbool RegItem = 33;\ngoogle.protobuf.DoubleValue RenewalRate = 34;\ngoogle.protobuf.DoubleValue RepCost = 35;\ngoogle.protobuf.Int32Value RSM_Type = 37;\nbool SafetyItem = 39;\nbool StandItem = 40;\ngoogle.protobuf.Int32Value StandLife = 41;\ngoogle.protobuf.DoubleValue StandRes = 42;\ngoogle.protobuf.Int32Value Unit = 48;",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiAttributeSet": {
      "properties": {
        "AttributeDescription": {
          "type": "string"
        },
        "AttributeID": {
          "format": "int32",
          "type": "integer"
        },
        "AttributeNotes": {
          "type": "string"
        },
        "AttributeType": {
          "$ref": "#/definitions/conquest_apiObjectType",
          "title": "ObjectType is one of the following: AssetType, ActionCategory, StandardAction, StandardDefect, StandardInspection"
        },
        "ConditionType": {
          "$ref": "#/definitions/conquest_apiConditionType"
        },
        "ExcludedGroups": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "Fields": {
          "items": {
            "$ref": "#/definitions/conquest_apiAttributeSetField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiAttributeSetField": {
      "properties": {
        "Caption": {
          "type": "string"
        },
        "DimensionValue": {
          "$ref": "#/definitions/conquest_apiAttributeSet_DimensionValue"
        },
        "FieldName": {
          "title": "FieldName is the Field that appears on the ObjectType, for example, Asset.UserText1",
          "type": "string"
        },
        "HierarchyValue": {
          "$ref": "#/definitions/conquest_apiAttributeSet_HierarchyValue"
        },
        "ListValue": {
          "$ref": "#/definitions/conquest_apiAttributeSet_ListValue"
        },
        "Notes": {
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        },
        "Required": {
          "type": "boolean"
        },
        "SimpleValue": {
          "properties": {}
        },
        "WeightedValue": {
          "$ref": "#/definitions/conquest_apiAttributeSet_WeightedValue"
        }
      },
      "type": "object"
    },
    "conquest_apiAttributeSetFieldNames": {
      "properties": {
        "FieldNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        }
      },
      "type": "object"
    },
    "conquest_apiAttributeSet_DimensionValue": {
      "properties": {
        "CodeDescription": {
          "type": "string"
        },
        "CodeID": {
          "format": "int32",
          "title": "CodeID refers to a CodeFieldItem in the Unit of Measurement list",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiAttributeSet_HierarchyValue": {
      "properties": {
        "CodeListDescription": {
          "type": "string"
        },
        "CodeListID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiAttributeSet_ListValue": {
      "properties": {
        "CodeListDescription": {
          "type": "string"
        },
        "CodeListID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiAttributeSet_WeightedValue": {
      "properties": {
        "CodeListDescription": {
          "type": "string"
        },
        "CodeListID": {
          "format": "int32",
          "type": "integer"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "conquest_apiAttributeSetsResult": {
      "properties": {
        "AttributeSets": {
          "items": {
            "$ref": "#/definitions/conquest_apiAttributeSet"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiAuthTokenResponse": {
      "properties": {
        "access_token": {
          "type": "string"
        },
        "expires_in": {
          "description": "expires_in seconds. For example 3600 is 1 hour.",
          "format": "int32",
          "type": "integer"
        },
        "id_token": {
          "type": "string"
        },
        "refresh_token": {
          "description": "refresh_token for when the 'offline' scope is requested.",
          "type": "string"
        },
        "token_type": {
          "title": "always 'bearer'",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiAvailableFeatures": {
      "properties": {
        "AzureAddressSearch": {
          "type": "boolean"
        },
        "Documents": {
          "type": "boolean"
        },
        "Emails": {
          "type": "boolean"
        },
        "GooglePlacesSearch": {
          "type": "boolean"
        },
        "TrimDocuments": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiBaseLayerConfiguration": {
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "maxZoom": {
          "format": "double",
          "type": "number"
        },
        "minZoom": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "templateUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiCalculateDefectResponseDateParameters": {
      "description": "Parameters to calculate a Defect's Response Date calculated from the Current Inspection Date, Asset's Priority and Severity.",
      "properties": {
        "DefectID": {
          "format": "int32",
          "title": "The Defect for which Severities and their the Response Times are configured (on it's Standard Defect)",
          "type": "integer"
        },
        "SeverityID": {
          "format": "int32",
          "title": "The Severity chosen for the defect",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiCalculateDefectResponseDateRequest": {
      "properties": {
        "Parameters": {
          "items": {
            "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateParameters"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiCalculateDefectResponseDateResponse": {
      "properties": {
        "Results": {
          "items": {
            "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiCalculateDefectResponseDateResult": {
      "properties": {
        "Parameters": {
          "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateParameters"
        },
        "ResponseDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue",
          "description": "The Response Date calculated from the Current Inspection Date, Asset's Priority and Severity."
        }
      },
      "type": "object"
    },
    "conquest_apiCalendarDurationUnit": {
      "default": "CalendarDurationUnit_Unknown",
      "enum": [
        "CalendarDurationUnit_Unknown",
        "CalendarDurationUnit_Year",
        "CalendarDurationUnit_Quarter",
        "CalendarDurationUnit_Month",
        "CalendarDurationUnit_DayOfYear",
        "CalendarDurationUnit_Day",
        "CalendarDurationUnit_WeekOfYear",
        "CalendarDurationUnit_Weekday",
        "CalendarDurationUnit_Hour",
        "CalendarDurationUnit_Minute",
        "CalendarDurationUnit_Second",
        "CalendarDurationUnit_WorkingCalendarDay"
      ],
      "type": "string"
    },
    "conquest_apiChangeAssetTypeCommand": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "ExpiryDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "OriginalTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "TransactionDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "TypeID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiChangeDocumentContentCommand": {
      "properties": {
        "Address": {
          "title": "See AddDocumentCommand.Address",
          "type": "string"
        },
        "ContentLength": {
          "format": "int64",
          "title": "ContentLength in bytes",
          "type": "string"
        },
        "ContentType": {
          "type": "string"
        },
        "DocumentDescription": {
          "type": "string"
        },
        "DocumentID": {
          "format": "int32",
          "type": "integer"
        },
        "Hashes": {
          "description": "A list of calculated hashes / checksum of the file to be uploaded.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "LinkExistingDocument": {
          "type": "boolean"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "UpdateTime": {
          "description": "UpdateTime when provided by the device can be used as a key, because a DocumentID is not yet present.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiChangeDocumentDescriptionCommand": {
      "properties": {
        "DocumentDescription": {
          "type": "string"
        },
        "DocumentID": {
          "format": "int32",
          "type": "integer"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      },
      "type": "object"
    },
    "conquest_apiChangeSetResult": {
      "properties": {
        "Accepted": {
          "type": "boolean"
        },
        "Editor": {
          "type": "string"
        },
        "JobKey": {
          "$ref": "#/definitions/conquest_apiJobKey"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      },
      "type": "object"
    },
    "conquest_apiCodeList": {
      "properties": {
        "CodeListID": {
          "format": "int32",
          "title": "CodeListID aka. CodeFieldID",
          "type": "integer"
        },
        "CodeListName": {
          "title": "CodeListName is set for System lists (aka. CodeField)",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiCodeListItem"
          },
          "type": "array"
        },
        "Type": {
          "$ref": "#/definitions/conquest_apiCodeListType"
        }
      },
      "title": "tblCodeField",
      "type": "object"
    },
    "conquest_apiCodeListItem": {
      "properties": {
        "CodeID": {
          "format": "int32",
          "type": "integer"
        },
        "CodeListID": {
          "format": "int32",
          "title": "CodeListID aka. CodeFieldID",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Ordr": {
          "format": "int32",
          "type": "integer"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        }
      },
      "title": "tblCode",
      "type": "object"
    },
    "conquest_apiCodeListRecord": {
      "properties": {
        "CodeListName": {
          "title": "CodeListName is set for System lists (aka. CodeField)",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiCodeListItem"
          },
          "type": "array"
        },
        "Type": {
          "$ref": "#/definitions/conquest_apiCodeListType"
        }
      },
      "type": "object"
    },
    "conquest_apiCodeListType": {
      "default": "CodeListType_System",
      "enum": [
        "CodeListType_System",
        "CodeListType_User",
        "CodeListType_Condition",
        "CodeListType_Element",
        "CodeListType_Defect",
        "CodeListType_Hierarchy",
        "CodeListType_Consequence",
        "CodeListType_Unknown"
      ],
      "type": "string"
    },
    "conquest_apiCompareOperator": {
      "default": "CompareOperator_None",
      "enum": [
        "CompareOperator_None",
        "CompareOperator_RangeInclusive",
        "CompareOperator_GreaterThan",
        "CompareOperator_GreaterThanOrEqualTo",
        "CompareOperator_LessThan",
        "CompareOperator_LessThanOrEqualTo",
        "CompareOperator_Contains",
        "CompareOperator_EqualTo",
        "CompareOperator_NotSet",
        "CompareOperator_StringStartsWith",
        "CompareOperator_StringEndsWith",
        "CompareOperator_StringContains",
        "CompareOperator_DescendentOf",
        "CompareOperator_AncestorOf",
        "CompareOperator_ChildrenOf",
        "CompareOperator_ContainsAnyOf"
      ],
      "title": "- CompareOperator_RangeInclusive: RangeComparisonType\n - CompareOperator_Contains: SetComparisonType\n - CompareOperator_EqualTo: ValueComparisonType\n - CompareOperator_StringStartsWith: String comparisons\n - CompareOperator_DescendentOf: HierarchyComparisonType",
      "type": "string"
    },
    "conquest_apiCompleteActionCommand": {
      "properties": {
        "CompletionOptions": {
          "$ref": "#/definitions/conquest_apiActionCompletionOptions"
        },
        "SubActionCompletionOptions": {
          "items": {
            "$ref": "#/definitions/conquest_apiActionCompletionOptions"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiCompleteActionResult": {
      "properties": {
        "job_key": {
          "$ref": "#/definitions/conquest_apiJobKey"
        }
      },
      "type": "object"
    },
    "conquest_apiCompleteDefectCommand": {
      "properties": {
        "CompletionDate": {
          "format": "date-time",
          "type": "string"
        },
        "DefectID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiConditionType": {
      "default": "ConditionType_WeightedAverage",
      "enum": [
        "ConditionType_WeightedAverage",
        "ConditionType_ConditionDistribution"
      ],
      "title": "- ConditionType_WeightedAverage: Weighted Average (Default)\n - ConditionType_ConditionDistribution: Condition Distribution (%)",
      "type": "string"
    },
    "conquest_apiContextDescriptor": {
      "properties": {
        "Context": {
          "title": "Context name",
          "type": "string"
        },
        "ParameterObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType",
          "title": "ParameterObjectType is the ObjectType of the parameter that the result is related to"
        },
        "ParameterObjectType2": {
          "$ref": "#/definitions/conquest_apiObjectType",
          "description": "ParameterObjectType2 is the ObjectType of the parameter that the result is related to\nIf ParameterObjectType2 = None, it will be ignored."
        },
        "PredefinedContextCriteria": {
          "description": "A Context can have some pre-defined criteria that the user can enable or disable when parameterising a Find query.\n\nFor example, the related actions Find query can be parameterised with the pre-defined criteria 'Completed' and 'Not Completed'",
          "items": {
            "$ref": "#/definitions/conquest_apiPredefinedContextCriteria"
          },
          "type": "array"
        },
        "ResultObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType",
          "title": "ResultObjectType is the ObjectType of the returned result"
        },
        "System": {
          "title": "This context is pre-defined by the system",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiContractorEmailMetadata": {
      "properties": {
        "EmailAddress": {
          "type": "string"
        },
        "EmailMessage": {
          "type": "string"
        },
        "EmailSubject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiContractorEntity": {
      "properties": {
        "ContractorID": {
          "format": "int32",
          "type": "integer"
        },
        "DocumentLocation": {
          "type": "string"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiContractorRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiContractorRecord": {
      "properties": {
        "ACN": {
          "title": "Australian Company Name (ACN)",
          "type": "string"
        },
        "ActionCategories": {
          "$ref": "#/definitions/conquest_apiActionCategoryList"
        },
        "Address": {
          "type": "string"
        },
        "Contact": {
          "type": "string"
        },
        "ContractorName": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Inactive": {
          "type": "boolean"
        },
        "Phone1": {
          "type": "string"
        },
        "Phone2": {
          "type": "string"
        },
        "PostCode": {
          "type": "string"
        },
        "SubContractors": {
          "$ref": "#/definitions/conquest_apiSubContractorList"
        },
        "Suburb": {
          "type": "string"
        },
        "UserText1": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiCopyAssetCommand": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "ParentID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiCopyAssetResult": {
      "properties": {
        "copiedObjectKeys": {
          "items": {
            "$ref": "#/definitions/conquest_apiObjectKey"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiCopyAssetTypeResult": {
      "properties": {
        "copiedObjectKeys": {
          "items": {
            "$ref": "#/definitions/conquest_apiObjectKey"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiCopyDownFieldDefinition": {
      "properties": {
        "Caption": {
          "type": "string"
        },
        "FieldName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiCostType": {
      "default": "CostType_Other",
      "enum": [
        "CostType_Other",
        "CostType_Actual",
        "CostType_Estimated"
      ],
      "type": "string"
    },
    "conquest_apiCreateActionForAssetCommand": {
      "properties": {
        "ActionDescription": {
          "type": "string"
        },
        "AssetID": {
          "format": "int32",
          "title": "ParentID is 0 if this is a Facility",
          "type": "integer"
        },
        "StdActionID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiCreateActionForDefectCommand": {
      "properties": {
        "DefectID": {
          "format": "int32",
          "type": "integer"
        },
        "StdActionID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiCreateAssetCommand": {
      "properties": {
        "AssetDescription": {
          "type": "string"
        },
        "GeographyData": {
          "$ref": "#/definitions/conquest_apiGeographyData"
        },
        "ParentID": {
          "format": "int32",
          "title": "ParentID is 0 if this is a Facility",
          "type": "integer"
        },
        "Proposed": {
          "type": "boolean"
        },
        "TypeID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiCreateAssetInspectionCommand": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "ChangeSet": {
          "$ref": "#/definitions/conquest_apiAssetInspectionRecordChangeSet"
        },
        "StdAssetInspectionID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiCreateDefectForAssetCommand": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "StdDefectID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiCreateDefectForAssetInspectionCommand": {
      "properties": {
        "AssetInspectionID": {
          "format": "int32",
          "type": "integer"
        },
        "StdDefectID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiCreateRequestCommand": {
      "properties": {
        "ChangeSet": {
          "$ref": "#/definitions/conquest_apiRequestRecordChangeSet"
        }
      },
      "type": "object"
    },
    "conquest_apiCreateSessionGrantType": {
      "default": "unknown",
      "enum": [
        "unknown",
        "authorization_code"
      ],
      "title": "- authorization_code: code is used for exchanging an authorization code for an access token\nwhen an application is configured for the 'authorization code flow'",
      "type": "string"
    },
    "conquest_apiCreateSessionResponse": {
      "properties": {
        "Error": {
          "$ref": "#/definitions/conquest_apiErrorResponse"
        },
        "TokenResponse": {
          "$ref": "#/definitions/conquest_apiAuthTokenResponse"
        }
      },
      "type": "object"
    },
    "conquest_apiCreateSucceedingActionCommand": {
      "properties": {
        "ActionDescription": {
          "type": "string"
        },
        "ActionID": {
          "format": "int32",
          "title": "ActionID is the PrecedingAction",
          "type": "integer"
        },
        "StdActionID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiCriteria": {
      "description": "Criteria is a list of expressions in a 'where' clause that evaluate to true or false.",
      "properties": {
        "And": {
          "title": "If And is true, all Items must be true for the Criteria to evaluate to true\nIf And is false, all Items must be false for the Criteria to evaluate to false",
          "type": "boolean"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiCriteriaItem"
          },
          "title": "A list of expressions which evaluate to true or false",
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiCriteriaItem": {
      "properties": {
        "FieldList": {
          "$ref": "#/definitions/conquest_apiFieldCriterionList",
          "title": "Use 'Fields' instead"
        },
        "Fields": {
          "$ref": "#/definitions/conquest_apiFieldCriterionList"
        },
        "Group": {
          "$ref": "#/definitions/conquest_apiCriteria"
        }
      },
      "title": "Criteria is an expression in a 'where' clause that evaluates to true or false",
      "type": "object"
    },
    "conquest_apiCsvImportStateResponse": {
      "properties": {
        "Created": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "LastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "ProcessID": {
          "title": "job_id",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/conquest_apiJobStatus"
        },
        "StatusDescription": {
          "type": "string"
        },
        "TaskProgress": {
          "format": "double",
          "type": "number"
        },
        "Title": {
          "type": "string"
        },
        "TotalWork": {
          "format": "double",
          "type": "number"
        },
        "WorkDone": {
          "format": "double",
          "type": "number"
        },
        "job_key": {
          "$ref": "#/definitions/conquest_apiJobKey",
          "title": "aka. ProcessID/BatchID with JobType_CsvImport"
        }
      },
      "type": "object"
    },
    "conquest_apiCustomHyperlink": {
      "properties": {
        "CustomHyperlinkID": {
          "type": "string"
        },
        "IsAvailable": {
          "type": "boolean"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "Link": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiCustomHyperlinkDefinition": {
      "properties": {
        "CustomHyperlinkID": {
          "type": "string"
        },
        "IsAvailableExpression": {
          "type": "string"
        },
        "IsEnabledExpression": {
          "type": "string"
        },
        "LinkExpression": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "TitleExpression": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiCustomHyperlinkEvaluationError": {
      "properties": {
        "Error": {
          "type": "string"
        },
        "Expression": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiCustomHyperlinkEvaluationResult": {
      "properties": {
        "Errors": {
          "items": {
            "$ref": "#/definitions/conquest_apiCustomHyperlinkEvaluationError"
          },
          "type": "array"
        },
        "Value": {
          "$ref": "#/definitions/conquest_apiCustomHyperlink"
        }
      },
      "type": "object"
    },
    "conquest_apiCustomHyperlinkList": {
      "properties": {
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiCustomHyperlink"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiCyclicActionCompletionProcess": {
      "properties": {
        "NextCycleDueDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiDatabaseConnectionNamesResponse": {
      "properties": {
        "connectionNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "preferredConnectionName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiDecimal": {
      "format": "double",
      "type": "number"
    },
    "conquest_apiDecimalValue": {
      "properties": {
        "value": {
          "$ref": "#/definitions/conquest_apiDecimal"
        }
      },
      "type": "object"
    },
    "conquest_apiDefectEntity": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "AttributeID": {
          "format": "int32",
          "title": "AttributeID for the AttributeSet configured on the AssetType",
          "type": "integer"
        },
        "CompletionDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "DefectID": {
          "format": "int32",
          "type": "integer"
        },
        "DocumentLocation": {
          "type": "string"
        },
        "EditDate": {
          "format": "date-time",
          "type": "string"
        },
        "Editor": {
          "type": "string"
        },
        "InspectionID": {
          "format": "int32",
          "type": "integer"
        },
        "MapStyle": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "Permission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiDefectRecord"
        },
        "ResponseDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue",
          "title": "ResponseDate for the Selected Severity"
        },
        "SeverityScore": {
          "format": "int32",
          "title": "The Severity Score of the Standard Defect Response of the selected Severity",
          "type": "integer"
        },
        "SysUserHierarchy1": {
          "format": "int32",
          "title": "The Asset Priority (aka. Asset.SysUserHierarchy1)",
          "type": "integer"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        }
      },
      "title": "DefectEntity is comprised of the Defect's Record and auxiliary fields (calculated, related)",
      "type": "object"
    },
    "conquest_apiDefectRecord": {
      "description": "DefectRecord is a selection of fields that may be modified directly.",
      "properties": {
        "CategoryID": {
          "format": "int32",
          "type": "integer"
        },
        "Condition": {
          "format": "int32",
          "type": "integer"
        },
        "CostEstimate": {
          "$ref": "#/definitions/conquest_apiDecimalValue",
          "description": "google.protobuf.Int32Value ElementList = 44; // Legacy no-one uses it Peter says.\n   google.protobuf.Int32Value Element = 45; // Legacy no-one uses it Peter says."
        },
        "DefectDescription": {
          "type": "string"
        },
        "DefectNotes": {
          "type": "string"
        },
        "GeometryData": {
          "$ref": "#/definitions/conquest_apiGeometryDataValue"
        },
        "Inspection": {
          "$ref": "#/definitions/conquest_apiInspectionRecord"
        },
        "LocationCoordinates": {
          "$ref": "#/definitions/conquest_apiGeographyDataValue",
          "title": "LocationCoordinates is a pin/point that defaults to the centroid on the Defect's geography object"
        },
        "MaterialQuantity": {
          "format": "double",
          "type": "number"
        },
        "Monitor": {
          "type": "boolean"
        },
        "Priority": {
          "format": "int32",
          "type": "integer"
        },
        "SeverityID": {
          "format": "int32",
          "title": "SeverityID as determined by the Asset's Priority",
          "type": "integer"
        },
        "StdDefectID": {
          "format": "int32",
          "type": "integer"
        },
        "UserCheck1": {
          "type": "boolean"
        },
        "UserCheck10": {
          "type": "boolean"
        },
        "UserCheck11": {
          "type": "boolean"
        },
        "UserCheck12": {
          "type": "boolean"
        },
        "UserCheck13": {
          "type": "boolean"
        },
        "UserCheck14": {
          "type": "boolean"
        },
        "UserCheck15": {
          "type": "boolean"
        },
        "UserCheck16": {
          "type": "boolean"
        },
        "UserCheck17": {
          "type": "boolean"
        },
        "UserCheck18": {
          "type": "boolean"
        },
        "UserCheck19": {
          "type": "boolean"
        },
        "UserCheck2": {
          "type": "boolean"
        },
        "UserCheck20": {
          "type": "boolean"
        },
        "UserCheck21": {
          "type": "boolean"
        },
        "UserCheck22": {
          "type": "boolean"
        },
        "UserCheck23": {
          "type": "boolean"
        },
        "UserCheck24": {
          "type": "boolean"
        },
        "UserCheck25": {
          "type": "boolean"
        },
        "UserCheck26": {
          "type": "boolean"
        },
        "UserCheck27": {
          "type": "boolean"
        },
        "UserCheck28": {
          "type": "boolean"
        },
        "UserCheck29": {
          "type": "boolean"
        },
        "UserCheck3": {
          "type": "boolean"
        },
        "UserCheck30": {
          "type": "boolean"
        },
        "UserCheck4": {
          "type": "boolean"
        },
        "UserCheck5": {
          "type": "boolean"
        },
        "UserCheck6": {
          "type": "boolean"
        },
        "UserCheck7": {
          "type": "boolean"
        },
        "UserCheck8": {
          "type": "boolean"
        },
        "UserCheck9": {
          "type": "boolean"
        },
        "UserDate1": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate10": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate11": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate12": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate13": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate14": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate15": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate16": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate17": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate18": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate19": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate2": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate20": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate21": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate22": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate23": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate24": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate25": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate26": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate27": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate28": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate29": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate3": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate30": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate4": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate5": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate6": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate7": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate8": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserDate9": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "UserList1": {
          "format": "int32",
          "type": "integer"
        },
        "UserList10": {
          "format": "int32",
          "type": "integer"
        },
        "UserList11": {
          "format": "int32",
          "type": "integer"
        },
        "UserList12": {
          "format": "int32",
          "type": "integer"
        },
        "UserList13": {
          "format": "int32",
          "type": "integer"
        },
        "UserList14": {
          "format": "int32",
          "type": "integer"
        },
        "UserList15": {
          "format": "int32",
          "type": "integer"
        },
        "UserList16": {
          "format": "int32",
          "type": "integer"
        },
        "UserList17": {
          "format": "int32",
          "type": "integer"
        },
        "UserList18": {
          "format": "int32",
          "type": "integer"
        },
        "UserList19": {
          "format": "int32",
          "type": "integer"
        },
        "UserList2": {
          "format": "int32",
          "type": "integer"
        },
        "UserList20": {
          "format": "int32",
          "type": "integer"
        },
        "UserList21": {
          "format": "int32",
          "type": "integer"
        },
        "UserList22": {
          "format": "int32",
          "type": "integer"
        },
        "UserList23": {
          "format": "int32",
          "type": "integer"
        },
        "UserList24": {
          "format": "int32",
          "type": "integer"
        },
        "UserList25": {
          "format": "int32",
          "type": "integer"
        },
        "UserList26": {
          "format": "int32",
          "type": "integer"
        },
        "UserList27": {
          "format": "int32",
          "type": "integer"
        },
        "UserList28": {
          "format": "int32",
          "type": "integer"
        },
        "UserList29": {
          "format": "int32",
          "type": "integer"
        },
        "UserList3": {
          "format": "int32",
          "type": "integer"
        },
        "UserList30": {
          "format": "int32",
          "type": "integer"
        },
        "UserList4": {
          "format": "int32",
          "type": "integer"
        },
        "UserList5": {
          "format": "int32",
          "type": "integer"
        },
        "UserList6": {
          "format": "int32",
          "type": "integer"
        },
        "UserList7": {
          "format": "int32",
          "type": "integer"
        },
        "UserList8": {
          "format": "int32",
          "type": "integer"
        },
        "UserList9": {
          "format": "int32",
          "type": "integer"
        },
        "UserNumber1": {
          "format": "double",
          "type": "number"
        },
        "UserNumber10": {
          "format": "double",
          "type": "number"
        },
        "UserNumber11": {
          "format": "double",
          "type": "number"
        },
        "UserNumber12": {
          "format": "double",
          "type": "number"
        },
        "UserNumber13": {
          "format": "double",
          "type": "number"
        },
        "UserNumber14": {
          "format": "double",
          "type": "number"
        },
        "UserNumber15": {
          "format": "double",
          "type": "number"
        },
        "UserNumber16": {
          "format": "double",
          "type": "number"
        },
        "UserNumber17": {
          "format": "double",
          "type": "number"
        },
        "UserNumber18": {
          "format": "double",
          "type": "number"
        },
        "UserNumber19": {
          "format": "double",
          "type": "number"
        },
        "UserNumber2": {
          "format": "double",
          "type": "number"
        },
        "UserNumber20": {
          "format": "double",
          "type": "number"
        },
        "UserNumber21": {
          "format": "double",
          "type": "number"
        },
        "UserNumber22": {
          "format": "double",
          "type": "number"
        },
        "UserNumber23": {
          "format": "double",
          "type": "number"
        },
        "UserNumber24": {
          "format": "double",
          "type": "number"
        },
        "UserNumber25": {
          "format": "double",
          "type": "number"
        },
        "UserNumber26": {
          "format": "double",
          "type": "number"
        },
        "UserNumber27": {
          "format": "double",
          "type": "number"
        },
        "UserNumber28": {
          "format": "double",
          "type": "number"
        },
        "UserNumber29": {
          "format": "double",
          "type": "number"
        },
        "UserNumber3": {
          "format": "double",
          "type": "number"
        },
        "UserNumber30": {
          "format": "double",
          "type": "number"
        },
        "UserNumber4": {
          "format": "double",
          "type": "number"
        },
        "UserNumber5": {
          "format": "double",
          "type": "number"
        },
        "UserNumber6": {
          "format": "double",
          "type": "number"
        },
        "UserNumber7": {
          "format": "double",
          "type": "number"
        },
        "UserNumber8": {
          "format": "double",
          "type": "number"
        },
        "UserNumber9": {
          "format": "double",
          "type": "number"
        },
        "UserText1": {
          "type": "string"
        },
        "UserText10": {
          "type": "string"
        },
        "UserText11": {
          "type": "string"
        },
        "UserText12": {
          "type": "string"
        },
        "UserText13": {
          "type": "string"
        },
        "UserText14": {
          "type": "string"
        },
        "UserText15": {
          "type": "string"
        },
        "UserText16": {
          "type": "string"
        },
        "UserText17": {
          "type": "string"
        },
        "UserText18": {
          "type": "string"
        },
        "UserText19": {
          "type": "string"
        },
        "UserText2": {
          "type": "string"
        },
        "UserText20": {
          "type": "string"
        },
        "UserText21": {
          "type": "string"
        },
        "UserText22": {
          "type": "string"
        },
        "UserText23": {
          "type": "string"
        },
        "UserText24": {
          "type": "string"
        },
        "UserText25": {
          "type": "string"
        },
        "UserText26": {
          "type": "string"
        },
        "UserText27": {
          "type": "string"
        },
        "UserText28": {
          "type": "string"
        },
        "UserText29": {
          "type": "string"
        },
        "UserText3": {
          "type": "string"
        },
        "UserText30": {
          "type": "string"
        },
        "UserText4": {
          "type": "string"
        },
        "UserText5": {
          "type": "string"
        },
        "UserText6": {
          "type": "string"
        },
        "UserText7": {
          "type": "string"
        },
        "UserText8": {
          "type": "string"
        },
        "UserText9": {
          "type": "string"
        },
        "WorkRequired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiDefectRecordChangeSet": {
      "properties": {
        "Changes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "DefectID": {
          "format": "int32",
          "type": "integer"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiDefectRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiDefectRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiDeleteActionCommand": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "DeleteRelatedRequests": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiDeleteAssetCommand": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiDeleteAssetInspectionCommand": {
      "properties": {
        "AssetInspectionID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiDeleteDefectCommand": {
      "properties": {
        "DefectID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiDeleteRequestCommand": {
      "properties": {
        "RequestID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiDescribeEnumerationRequest": {
      "properties": {
        "EnumerationTypeNames": {
          "items": {
            "type": "string"
          },
          "title": "EnumerationTypeNames is a list of the \"original names\" or \"tags\" of the values in the EnumerationType",
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiDescribeEnumerationResult": {
      "properties": {
        "Enumerations": {
          "items": {
            "$ref": "#/definitions/conquest_apiEnumeration"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiDisposalActionCompletionProcess": {
      "properties": {
        "MeasurementAfterDisposal": {
          "$ref": "#/definitions/conquest_apiDecimalValue"
        }
      },
      "type": "object"
    },
    "conquest_apiDocument": {
      "properties": {
        "Content": {
          "type": "string"
        },
        "ContentLength": {
          "format": "int64",
          "title": "ContentLength in bytes",
          "type": "string"
        },
        "ContentType": {
          "title": "The content type is not set if the document is an https link",
          "type": "string"
        },
        "CreateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "DocumentDescription": {
          "type": "string"
        },
        "DocumentID": {
          "format": "int32",
          "type": "integer"
        },
        "FileShouldBeAccessible": {
          "description": "FileShouldBeAccessible reports whether the document file SHOULD be accessible.\n\nThis depends on two things:\n- Is the file from a correctly configured document location?\n- Has the file been uploaded successfully (UploadStatus_Completed)?",
          "type": "boolean"
        },
        "JobKey": {
          "$ref": "#/definitions/conquest_apiJobKey"
        },
        "Link": {
          "description": "Links point to documents that we do not manage. They are just a pointer to a record in another system.\n\n- A link can point to a web page\n- A link can point to record in a document system\n\nLinks are pointers which don't contain an authentication material. \n\nA Link may be used to reference a document that we could request and serve using the GenerateDocumentLinkCommand\n\nYou can obtain an appropriate link which encodes a security token using the GenerateDocumentLinkCommand\nOR use the \"/download/document?object_type=...\u0026object_id=...\u0026document_id=...\" endpoint which will either serve\n   the file or redirect to a link, potentially generated by the GenerateDocumentLinkCommand",
          "type": "string"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        },
        "UploadStatus": {
          "$ref": "#/definitions/conquest_apiUploadStatus"
        }
      },
      "type": "object"
    },
    "conquest_apiDocumentContainer": {
      "properties": {
        "Name": {
          "title": "Name is display name. It is the same as the HierarchyNode.Name",
          "type": "string"
        },
        "Prefix": {
          "title": "Prefix is a Uri, that always ends with a '/'. It is the same as the HierarchyNode.ObjectKey.StringValue",
          "type": "string"
        }
      },
      "title": "DocumentContainer is convertible to a HierarchyNode which does not have a ParentKey nor a FamilyCode",
      "type": "object"
    },
    "conquest_apiDocumentMigrationWorkLoad": {
      "properties": {
        "DeviceName": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "OverallProgressMessage": {
          "type": "string"
        },
        "OverallProgressValue": {
          "format": "double",
          "type": "number"
        },
        "ProgressDetails": {
          "items": {
            "$ref": "#/definitions/conquest_apiDocumentTypeMigrationProgress"
          },
          "type": "array"
        },
        "UserName": {
          "type": "string"
        },
        "WorkLoadID": {
          "title": "To identify each work load",
          "type": "string"
        },
        "WorkStarted": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiDocumentTypeMigrationProgress": {
      "properties": {
        "DocType": {
          "type": "string"
        },
        "ItemProcessed": {
          "format": "int32",
          "type": "integer"
        },
        "TotalItems": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiDocumentUploadJobItem": {
      "properties": {
        "Created": {
          "format": "date-time",
          "type": "string"
        },
        "DocID": {
          "type": "string"
        },
        "DocType": {
          "type": "string"
        },
        "FailMessage": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "IsUploadSuccess": {
          "type": "boolean"
        },
        "OriginalAddressInRecord": {
          "title": "Reference used to check if record changed",
          "type": "string"
        },
        "OriginalAddressToFileSystem": {
          "type": "string"
        },
        "UploadUri": {
          "type": "string"
        },
        "UploadUriExpires": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiEnumeration": {
      "description": "Enumeration is a description of the [enum] data types exposed in the API.",
      "properties": {
        "enumerationType": {
          "$ref": "#/definitions/conquest_apiEnumerationType",
          "title": "type is the DataType of the enumeration\nFor example:\n- If the proto type is Permission, then the type is Permission"
        },
        "values": {
          "items": {
            "$ref": "#/definitions/conquest_apiEnumerationItem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiEnumerationItem": {
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "value": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiEnumerationType": {
      "default": "EnumerationType_Unknown",
      "enum": [
        "EnumerationType_Unknown",
        "EnumerationType_ObjectType",
        "EnumerationType_ValueType",
        "EnumerationType_CompareOperator",
        "EnumerationType_FilterType",
        "EnumerationType_Permission",
        "EnumerationType_AccountType",
        "EnumerationType_ActionType",
        "EnumerationType_CostType",
        "EnumerationType_JobStatus",
        "EnumerationType_JobType",
        "EnumerationType_CalendarDurationUnit"
      ],
      "type": "string"
    },
    "conquest_apiEnvironmentProperties": {
      "properties": {
        "DataDirectory": {
          "type": "string"
        },
        "DataDirectoryToken": {
          "title": "DataDirectoryToken refers to the content in a file \"${DataDirectory}/.token\"\nit is used to check that the gateway and the api refer to the same directory",
          "type": "string"
        },
        "Hostname": {
          "title": "Hostname is System.Environment.MachineName in C#, os.Hostname() in golang",
          "type": "string"
        },
        "UploadsDirectory": {
          "type": "string"
        },
        "UploadsDirectoryToken": {
          "title": "UploadsDirectoryToken refers to the content in a file \"${UploadsDirectory}/.token\"\nit is used to check that the gateway and the api refer to the same directory",
          "type": "string"
        },
        "legacy_document_directories": {
          "items": {
            "$ref": "#/definitions/conquest_apiLegacyDocumentDirectory"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiErrorResponse": {
      "properties": {
        "error": {
          "type": "string"
        },
        "error_description": {
          "type": "string"
        },
        "error_uri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiExtensionModuleContext": {
      "properties": {
        "AgentId": {
          "type": "string"
        },
        "ContextId": {
          "type": "string"
        },
        "ModuleId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiFetchDocumentMigrationItemsToUploadResponse": {
      "properties": {
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiDocumentUploadJobItem"
          },
          "type": "array"
        },
        "WorkLoad": {
          "$ref": "#/definitions/conquest_apiDocumentMigrationWorkLoad"
        }
      },
      "type": "object"
    },
    "conquest_apiFieldCriterion": {
      "properties": {
        "CompareOperator": {
          "$ref": "#/definitions/conquest_apiCompareOperator"
        },
        "FieldName": {
          "title": "view+column as defined by a Context for which this criterion is for",
          "type": "string"
        },
        "Not": {
          "type": "boolean"
        },
        "Value": {
          "$ref": "#/definitions/conquest_apiAnyValue"
        }
      },
      "title": "FieldCriterion is a comparison that evaluates to true or false",
      "type": "object"
    },
    "conquest_apiFieldCriterionList": {
      "properties": {
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiFieldCriterion"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiFieldDescription": {
      "properties": {
        "FieldCaption": {
          "type": "string"
        },
        "FieldName": {
          "type": "string"
        },
        "TableCaption": {
          "type": "string"
        },
        "TableName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiFieldDescriptions": {
      "properties": {
        "FieldDescriptions": {
          "items": {
            "$ref": "#/definitions/conquest_apiFieldDescription"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiFilter": {
      "properties": {
        "Context": {
          "description": "Context is a selection of fields with a predefined Criteria. It is like the 'from' clause if a SQL query, a set of \"joined tables\".\n\nContexts are defined in the Field Dictionary\n\nThis Context is parameterised with the ObjectID for it's respective ObjectType",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "FilterID": {
          "description": "The ID for a UserView. A UserView is constructed using the filter builder.",
          "format": "int32",
          "type": "integer"
        },
        "FilterName": {
          "type": "string"
        },
        "IsAvailableToMobile": {
          "type": "boolean"
        },
        "MapViewID": {
          "description": "The ID for a MapView. A MapView is a collection of UserViews.\nThe ResultSet will have many groups.",
          "format": "int32",
          "type": "integer"
        },
        "Owner": {
          "type": "string"
        },
        "System": {
          "type": "boolean"
        },
        "UserViews": {
          "items": {
            "$ref": "#/definitions/conquest_apiUserViewFilter"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiFilterType": {
      "default": "FilterType_UserView",
      "enum": [
        "FilterType_UserView"
      ],
      "type": "string"
    },
    "conquest_apiFindContextsResult": {
      "properties": {
        "ContextDescriptors": {
          "items": {
            "$ref": "#/definitions/conquest_apiContextDescriptor"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiFindMapObjectsResult": {
      "properties": {
        "FilterName": {
          "type": "string"
        },
        "MapObjectsRecordSet": {
          "$ref": "#/definitions/conquest_apiMapObjectsRecordSet"
        },
        "X_RelatedContexts": {
          "items": {
            "$ref": "#/definitions/conquest_apiContextDescriptor"
          },
          "title": "X_RelatedContexts is a list of ContextDescriptors that the returned objects can use",
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiFindObjectHeadersResult": {
      "properties": {
        "Headers": {
          "items": {
            "$ref": "#/definitions/conquest_apiObjectHeader"
          },
          "type": "array"
        },
        "X_DataIsComplete": {
          "type": "boolean"
        },
        "X_RelatedContexts": {
          "items": {
            "$ref": "#/definitions/conquest_apiContextDescriptor"
          },
          "title": "X_RelatedContexts is a list of ContextDescriptors that the returned objects can use",
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiFindQuery": {
      "properties": {
        "Context": {
          "description": "Context is a selection of fields with a predefined Criteria. It is like the 'from' clause if a SQL query, a set of \"joined tables\".\n\nContexts are defined in the Field Dictionary\n\nThis Context is parameterised with the ObjectID for it's respective ObjectType",
          "type": "string"
        },
        "Criteria": {
          "$ref": "#/definitions/conquest_apiCriteria",
          "title": "The Criteria that filters the Context"
        },
        "ExtensionModuleContext": {
          "$ref": "#/definitions/conquest_apiExtensionModuleContext",
          "title": "Query Context for Extension Module\nWhen extension module context is used\n- Query SQL is defined in extension module, and made available to AppEngine  throught ExtensionHub\n- Flat list of CriteriaFields under single CriteriaItem is used for pass parameters to SQL query\n- FieldNames is ignored"
        },
        "FieldNames": {
          "description": "FieldNames is the list of fields that will be returned in the RecordSet.\n\nIf empty, the default selection of fields will be provided. Otherwise the selected field names, if defined by\nthe Context, will be returned",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "FilterID": {
          "description": "The ID for a UserView. A UserView is constructed using the filter builder.",
          "format": "int32",
          "type": "integer"
        },
        "Limit": {
          "format": "int32",
          "type": "integer"
        },
        "MapViewID": {
          "description": "The ID for a MapView. A MapView is a collection of UserViews. \nThe ResultSet will have many groups.",
          "format": "int32",
          "type": "integer"
        },
        "ParameterObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "ParameterObjectKey2": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "WithInBounds": {
          "$ref": "#/definitions/conquest_apiLatLngBounds"
        },
        "WithoutDefaultCriteria": {
          "description": "If true, the PredefinedContextCriteria, enabled by default are not applied.",
          "type": "boolean"
        },
        "X_IncludeCoordinates": {
          "type": "boolean"
        },
        "X_IncludeRelatedContexts": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiFindResult": {
      "properties": {
        "FilterName": {
          "type": "string"
        },
        "RecordSet": {
          "$ref": "#/definitions/conquest_apiRecordSet"
        },
        "X_RelatedContexts": {
          "items": {
            "$ref": "#/definitions/conquest_apiContextDescriptor"
          },
          "title": "X_RelatedContexts is a list of ContextDescriptors that the returned objects can use",
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiFontStyle": {
      "properties": {
        "CodePoint": {
          "format": "int32",
          "type": "integer"
        },
        "Color": {
          "type": "string"
        },
        "FontFamily": {
          "type": "string"
        },
        "FontPackage": {
          "type": "string"
        },
        "Size": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "conquest_apiGenerateDocumentLinkCommand": {
      "properties": {
        "DocumentID": {
          "format": "int32",
          "type": "integer"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "X_thumbnail_parameter": {
          "description": "Currently the only supported value is \"medium\"\n\nRegarding Blob Storage:\n\n    A thumbnail lives in a different container to the actual documents.\n\n    The thumbnail mount, that corresponds to another mount, has the suffix \".thumbnails\". For example: \"mount={mount}.thumbnails\"\n\n    The layout of a thumbnail container is the following\n\n        by_size/{size}/{blobName}\n\n    For example, for the given blob address (mount=default):\n\n        blob://default/Assets/1/image.png\n\n    The address for a 'medium' sized image will be:\n\n        blob://default.thumbnails/by_size/medium/Assets/1/image.png",
          "title": "When a thumbnail is desired, use set the thumbnail parameter",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiGenerateDocumentLinkResult": {
      "properties": {
        "ContentType": {
          "type": "string"
        },
        "JobKey": {
          "$ref": "#/definitions/conquest_apiJobKey"
        },
        "Link": {
          "description": "Link is is an authenticated link.\nWhen applicable, the \"/download/document?object_type=...\u0026object_id=...\u0026document_id=...\" endpoint redirects you to (address in the Location header) to this same value.",
          "type": "string"
        },
        "LinkExpireTime": {
          "description": "Not implemented, tentative.\nLinks do have an expiry, assume 1 hour.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiGeoPackageDescription": {
      "properties": {
        "Tables": {
          "items": {
            "$ref": "#/definitions/conquest_apiGeoPackageTableDescription"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGeoPackageKeyColumnDescriptionOption": {
      "properties": {
        "ColumnName": {
          "type": "string"
        },
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "TableName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiGeoPackageTableDescription": {
      "properties": {
        "ColumnInfos": {
          "items": {
            "$ref": "#/definitions/conquest_apigpkg_column_info"
          },
          "title": "ColumnInfos",
          "type": "array"
        },
        "Contents": {
          "$ref": "#/definitions/conquest_apigpkg_contents",
          "title": "Contents describes what tables have geometry data and the projection in use"
        },
        "DataColumns": {
          "description": "DataColumns are what could be identified in a geo package for a table.",
          "items": {
            "$ref": "#/definitions/conquest_apigpkg_data_columns"
          },
          "type": "array"
        },
        "GeometryColumn": {
          "$ref": "#/definitions/conquest_apigpkg_geometry_columns",
          "description": "GeometryColumn is the geometry column that will be used. There can only be one of these per table."
        },
        "GeometryColumns": {
          "description": "GeometryColumns are what could be identified in a geo package for a table.\nThere can only be one of these per table.",
          "items": {
            "$ref": "#/definitions/conquest_apigpkg_geometry_columns"
          },
          "type": "array"
        },
        "KeyColumnOption": {
          "$ref": "#/definitions/conquest_apiGeoPackageKeyColumnDescriptionOption",
          "title": "KeyColumnOption are user provided options that specify what column should be used as a key"
        },
        "ObjectIDColumn": {
          "$ref": "#/definitions/conquest_apigpkg_column_info",
          "description": "This is identified by either the KeyColumnOption otherwise a it will be inferred based on\na naming convention for Conquest IDs like asset_id or by annotated columns in DataColumns",
          "title": "ObjectIDColumn is the identity column that will be used to key the data to a Conquest Object"
        },
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType",
          "description": "ObjectType that will be used to key data to the Conquest Object.\n\nThis is identified by either the KeyColumnOption otherwise a it will be inferred based on\na naming convention for Conquest IDs like asset_id or by annotated columns in DataColumns"
        },
        "SrsSupported": {
          "title": "SRSSupported specifies whether the provided Spatial Reference System can be processed",
          "type": "boolean"
        },
        "TableName": {
          "title": "TableName of the table that's being described",
          "type": "string"
        }
      },
      "title": "A description of one table that exists in a geopackage",
      "type": "object"
    },
    "conquest_apiGeoPackageTableDescriptionOptions": {
      "properties": {
        "ColumnOptions": {
          "items": {
            "$ref": "#/definitions/conquest_apiGeoPackageKeyColumnDescriptionOption"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGeographyData": {
      "properties": {
        "latitude": {
          "format": "double",
          "title": "Y",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "title": "X",
          "type": "number"
        },
        "pin": {
          "type": "boolean"
        },
        "wkt": {
          "title": "EPSG 4326",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiGeographyDataValue": {
      "properties": {
        "value": {
          "$ref": "#/definitions/conquest_apiGeographyData"
        }
      },
      "type": "object"
    },
    "conquest_apiGeometryData": {
      "properties": {
        "srs_id": {
          "format": "int32",
          "type": "integer"
        },
        "wkt": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiGeometryDataValue": {
      "properties": {
        "value": {
          "$ref": "#/definitions/conquest_apiGeometryData"
        }
      },
      "type": "object"
    },
    "conquest_apiGetActionCompletionDetailsRequest": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "XIncludeCompletedSubActions": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiGetActionCompletionDetailsResponse": {
      "properties": {
        "Command": {
          "$ref": "#/definitions/conquest_apiCompleteActionCommand"
        },
        "Details": {
          "items": {
            "$ref": "#/definitions/conquest_apiActionCompletionDetails"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetAttributeSetFieldNamesResponse": {
      "properties": {
        "FieldNames": {
          "items": {
            "$ref": "#/definitions/conquest_apiAttributeSetFieldNames"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetAzureSearchForAddressApiEndPointResult": {
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "templateUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiGetBaseLayerConfigurationsResult": {
      "properties": {
        "BaseLayerConfigurations": {
          "items": {
            "$ref": "#/definitions/conquest_apiBaseLayerConfiguration"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetCodeListsQuery": {
      "properties": {
        "CodeID": {
          "description": "if CodeID is greater than zero, the CodeList for this Code will be loaded.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "CodeListID": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "CodeListName": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetCodeListsResult": {
      "properties": {
        "Lists": {
          "items": {
            "$ref": "#/definitions/conquest_apiCodeList"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetCopyDownFieldNamesResponse": {
      "properties": {
        "FieldDefinitions": {
          "items": {
            "$ref": "#/definitions/conquest_apiCopyDownFieldDefinition"
          },
          "type": "array"
        },
        "hasChildren": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiGetCustomHyperlinkDefinitionsResult": {
      "properties": {
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiCustomHyperlinkDefinition"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetDocumentLocationResult": {
      "properties": {
        "Address": {
          "type": "string"
        },
        "DocumentID": {
          "format": "int32",
          "type": "integer"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "UploadStatus": {
          "$ref": "#/definitions/conquest_apiUploadStatus"
        }
      },
      "type": "object"
    },
    "conquest_apiGetDocumentsQuery": {
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "ObjectKey for supported ObjectTypes: Asset, Action, Defect, Request, DocumentContainer"
        },
        "WithCreateTimes": {
          "items": {
            "format": "date-time",
            "type": "string"
          },
          "title": "WithCreateTimes is used to specify the particular document records to retrieve, by the unique document timestamp 'CreateTime'",
          "type": "array"
        },
        "WithDocumentIDs": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "title": "WithDocumentIDs is used to specify the particular document records to retrieve, by the unique document timestamp 'CreateTime'",
          "type": "array"
        },
        "WithUploadStatus": {
          "description": "If unset, all statuses will be shown.\nWhen rendering this list, only those with the Completed status are downloadable.",
          "items": {
            "$ref": "#/definitions/conquest_apiUploadStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetDocumentsResult": {
      "properties": {
        "documents": {
          "items": {
            "$ref": "#/definitions/conquest_apiDocument"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetHistoryItemsResult": {
      "properties": {
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiUserHistoryItem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetJobStateQuery": {
      "properties": {
        "job_keys": {
          "items": {
            "$ref": "#/definitions/conquest_apiJobKey"
          },
          "type": "array"
        },
        "job_types": {
          "items": {
            "$ref": "#/definitions/conquest_apiJobType"
          },
          "type": "array"
        },
        "record_keys": {
          "items": {
            "$ref": "#/definitions/conquest_apiRecordKey"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetJobStateResponse": {
      "properties": {
        "states": {
          "items": {
            "$ref": "#/definitions/conquest_apiJobState"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetSystemSettingsResult": {
      "properties": {
        "Settings": {
          "items": {
            "$ref": "#/definitions/conquest_apiSystemSetting"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGetUploadTokenReponse": {
      "properties": {
        "UploadToken": {
          "$ref": "#/definitions/conquest_apiUploadToken"
        }
      },
      "type": "object"
    },
    "conquest_apiGetUserPreferencesResult": {
      "properties": {
        "Preferences": {
          "items": {
            "$ref": "#/definitions/conquest_apiUserPreference"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiGooglePlacesSearchConfiguration": {
      "properties": {
        "access_key": {
          "type": "string"
        },
        "proxy_address": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiGroupEntity": {
      "properties": {
        "GroupName": {
          "type": "string"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiGroupRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiGroupRecord": {
      "properties": {
        "ActionsPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "AssetValuationPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "AssetsPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "KnowledgeBasePermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "ListEditorPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "RequestsPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "ResourceEditorPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        }
      },
      "type": "object"
    },
    "conquest_apiInspectionRecord": {
      "properties": {
        "InspectionDate": {
          "format": "date-time",
          "type": "string"
        },
        "InspectionNotes": {
          "type": "string"
        },
        "InspectionType": {
          "format": "int32",
          "title": "from the Inspection Type code list",
          "type": "integer"
        },
        "Inspector": {
          "type": "string"
        },
        "InspectorOrganisation": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiInspectionsForAssetQuery": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiInspectionsForAssetResponse": {
      "properties": {
        "Inspections": {
          "items": {
            "$ref": "#/definitions/conquest_apiInspectionRecord"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiIssueBy": {
      "default": "IssueBy_Printer",
      "enum": [
        "IssueBy_Printer",
        "IssueBy_ElectronicMail",
        "IssueBy_None"
      ],
      "type": "string"
    },
    "conquest_apiIssueWorkOrderCommand": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "ContractorEmailMetadata": {
          "$ref": "#/definitions/conquest_apiContractorEmailMetadata"
        },
        "IssueBy": {
          "$ref": "#/definitions/conquest_apiIssueBy"
        },
        "IssueDate": {
          "format": "date-time",
          "type": "string"
        },
        "RelatedDocuments": {
          "items": {
            "$ref": "#/definitions/conquest_apiDocument"
          },
          "type": "array"
        },
        "Report": {
          "$ref": "#/definitions/conquest_apiReport"
        }
      },
      "type": "object"
    },
    "conquest_apiIssueWorkOrderResult": {
      "properties": {
        "job_key": {
          "$ref": "#/definitions/conquest_apiJobKey"
        }
      },
      "type": "object"
    },
    "conquest_apiItemLink": {
      "properties": {
        "IconAddress": {
          "type": "string"
        },
        "LinkDescription": {
          "type": "string"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "Parameters": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiJobCreationDetails": {
      "description": "JobCreationDetails of the job when submitted. It doesn't change once created.",
      "properties": {
        "add_document": {
          "$ref": "#/definitions/conquest_apiAddDocumentCommand"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "created_by": {
          "type": "string"
        },
        "csv_import": {
          "$ref": "#/definitions/conquest_apiAddNewCsvImportCommand"
        },
        "device_id": {
          "type": "string"
        },
        "empty": {
          "properties": {}
        },
        "generate_document_link": {
          "$ref": "#/definitions/conquest_apiGenerateDocumentLinkCommand"
        },
        "geopackage_import": {
          "$ref": "#/definitions/conquest_apiAddNewGeoPackageImportCommand"
        },
        "geoupdate": {
          "$ref": "#/definitions/conquest_apiAddGeoUpdateCommand"
        },
        "issue_work_order": {
          "$ref": "#/definitions/conquest_apiIssueWorkOrderCommand"
        },
        "record_key": {
          "$ref": "#/definitions/conquest_apiRecordKey"
        }
      },
      "type": "object"
    },
    "conquest_apiJobError": {
      "properties": {
        "error": {
          "title": "A short user friendly description of what went wrong.\nThis is empty unless the JobStatus is one of [JobStatus_Invalid, JobStatus_CompletedWithError, JobStatus_InterruptedWithError]",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiJobKey": {
      "description": "The unique key to reference the job. It is returned by all endpoints that submit a job.",
      "properties": {
        "job_id": {
          "title": "aka. ProcessID/BatchID",
          "type": "string"
        },
        "job_type": {
          "$ref": "#/definitions/conquest_apiJobType"
        }
      },
      "type": "object"
    },
    "conquest_apiJobProgressInfo": {
      "properties": {
        "last_updated": {
          "format": "date-time",
          "title": "The time that the state was last updated. State will update when one of the following changes.\na. job status, total_work, work_done, status_description\nd. the tracking info used by the job (eg. objects pending and objects created)",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/conquest_apiJobStatus"
        },
        "status_description": {
          "title": "/ A short user friendly description about what's currently happening\n/ Defaults to the display name of JobStatus",
          "type": "string"
        },
        "title": {
          "title": "The name of the process for quick identification by the user.\nDefaults to the display name of the JobType",
          "type": "string"
        },
        "total_work": {
          "description": "Total Units of work. Default is 1.",
          "format": "double",
          "type": "number"
        },
        "work_done": {
          "description": "Units of work currently completed, progress of process is calculated using = WorkDone / TotalWork.\nDefault is 0.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "conquest_apiJobResult": {
      "properties": {
        "empty": {
          "properties": {}
        },
        "error": {
          "$ref": "#/definitions/conquest_apiJobError",
          "title": "error is the result when job has stopped and the status is one of\n[JobStatus_Invalid or JobStatus_CompletedWithError]"
        }
      },
      "title": "JobResult is set after the job has ended, that is, when the status is one of\n[JobStatus_Invalid, JobStatus_Completed, JobStatus_CompletedWithError]",
      "type": "object"
    },
    "conquest_apiJobState": {
      "properties": {
        "creation_details": {
          "$ref": "#/definitions/conquest_apiJobCreationDetails",
          "description": "creation_details for when this job was submitted."
        },
        "job_key": {
          "$ref": "#/definitions/conquest_apiJobKey"
        },
        "progress": {
          "$ref": "#/definitions/conquest_apiJobProgressInfo",
          "description": "The progress of the job. This changes during the lifecycle of the job."
        },
        "result": {
          "$ref": "#/definitions/conquest_apiJobResult",
          "title": "JobResult is set after the job has ended, that is, when the status is one of\n[JobStatus_Invalid, JobStatus_Completed, JobStatus_CompletedWithError]"
        }
      },
      "type": "object"
    },
    "conquest_apiJobStatus": {
      "default": "JobStatus_Unknown",
      "description": " - JobStatus_Unknown: Unknown is an invalid state. Such a job should be logged and removed from processing.\n - JobStatus_Invalid: Invalid is an end state. It is used to report that a job is incorrectly parameterised.\nThe JobResult for this state is a JobError.\n - JobStatus_Completed: Completed is an end state.\n - JobStatus_CompletedWithError: CompletedWithError is an end state.\nThe JobResult for this state is not a JobError. If nothing is returned it will be JobResult.empty\n - JobStatus_Removed: CompletedWithError is an end state.\nThe JobResult for this state is a JobError.",
      "enum": [
        "JobStatus_Unknown",
        "JobStatus_Invalid",
        "JobStatus_Scheduled",
        "JobStatus_Queued",
        "JobStatus_Processing",
        "JobStatus_Paused",
        "JobStatus_Interrupted",
        "JobStatus_InterruptedWithError",
        "JobStatus_Completed",
        "JobStatus_CompletedWithError",
        "JobStatus_Removed"
      ],
      "type": "string"
    },
    "conquest_apiJobType": {
      "default": "JobType_Unknown",
      "description": "- JobType_CsvImport: Csv Import\n - JobType_CompleteActions: Action Completion\n - ForwardPlanningDateChange: Forward Planning Date Change\n - JobType_ConditionRecalculation: Condition Re-calculation\n - JobType_DepreciationRecalculation: Depreciation Re-calculation\n - JobType_IndexationUpdate: Indexation Update\n - JobType_Revaluation: Revaluation\n - JobType_ReplacementCostModification: Replacement Cost Modification\n - JobType_TransactionRollback: Transaction Rollback\n - JobType_ExpiryDateRecalculation: Expiry Date Re-calculation\n - JobType_RiskRecalculation: Risk Score Re-calculation\n - JobType_PostTransactions: Post Transactions\n - JobType_Bundler: Bundler (used for zipping stuff up)\n - JobType_GeoPackageImport: GeoPackage Import\n - JobType_GeoUpdate: GeoUpdate / Refresh\n - JobType_IssueWorkOrder: Issue work order\n - JobType_SendEmail: Send email\n - JobType_DownloadDocument: Download document\n - JobType_AddDocument: Add document",
      "enum": [
        "JobType_Unknown",
        "JobType_Other",
        "JobType_CsvImport",
        "JobType_CompleteActions",
        "ForwardPlanningDateChange",
        "JobType_ConditionRecalculation",
        "JobType_DepreciationRecalculation",
        "JobType_IndexationUpdate",
        "JobType_Revaluation",
        "JobType_ReplacementCostModification",
        "JobType_TransactionRollback",
        "JobType_ExpiryDateRecalculation",
        "JobType_RiskRecalculation",
        "JobType_PostTransactions",
        "JobType_Bundler",
        "JobType_GeoPackageImport",
        "JobType_GeoUpdate",
        "JobType_IssueWorkOrder",
        "JobType_SendEmail",
        "JobType_DownloadDocument",
        "JobType_AddDocument"
      ],
      "title": "Name these in such a way that it makes that sense to call it 'X Process'",
      "type": "string"
    },
    "conquest_apiLatLngBounds": {
      "properties": {
        "lat1": {
          "format": "double",
          "type": "number"
        },
        "lat2": {
          "format": "double",
          "type": "number"
        },
        "lng1": {
          "format": "double",
          "type": "number"
        },
        "lng2": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "conquest_apiLegacyDocumentDirectory": {
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "mount": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "token": {
          "title": "TODO decide whether to still do this.\nthe content of the ${path}.token file that is used to verify that the gateway and child processes\nare in-fact referring to the same directory",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiLineStyle": {
      "properties": {
        "StrokeColor": {
          "type": "string"
        },
        "StrokeOpacity": {
          "format": "double",
          "type": "number"
        },
        "StrokeWidth": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "conquest_apiListAttributeSetsQuery": {
      "properties": {
        "AttributeSetKeys": {
          "items": {
            "$ref": "#/definitions/conquest_apiObjectKey"
          },
          "type": "array"
        },
        "IncludeUnsetFields": {
          "type": "boolean"
        },
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        }
      },
      "title": "AttributeSets can be queried using a number of different objects types.\nThe AttributeSet that will be returned is the one that relates to the ObjectKey",
      "type": "object"
    },
    "conquest_apiListDocumentLocationsQuery": {
      "type": "object"
    },
    "conquest_apiListDocumentLocationsResponse": {
      "properties": {
        "DocumentLocations": {
          "items": {
            "$ref": "#/definitions/conquest_apiDocumentContainer"
          },
          "type": "array"
        },
        "PreferredLocationPrefix": {
          "title": "The PreferredLocationPrefix is selected by default.\nIt does *not* mean production. Every configured location *is* production.\nIt \"can\" mean a sub folder!",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiListFiltersQuery": {
      "properties": {
        "Context": {
          "type": "string"
        },
        "FilterIDs": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "FilterType": {
          "$ref": "#/definitions/conquest_apiFilterType"
        },
        "ForMobile": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiListFiltersResult": {
      "properties": {
        "Filters": {
          "items": {
            "$ref": "#/definitions/conquest_apiFilter"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiListHierarchyNodesQuery": {
      "description": "WARNING: IMPLEMENTATION INCOMPLETE (API 2.0.5)\n  Some endpoints may ignore the parameters below and return more data. DO NOT ASSUME IT WILL STAY THIS WAY.\n  Your code should always set the parameters below and assume the expected, not the actual data they currently return.",
      "properties": {
        "IncludeAncestors": {
          "type": "boolean"
        },
        "IncludeChildren": {
          "type": "boolean"
        },
        "IncludeDescendents": {
          "format": "int32",
          "type": "integer"
        },
        "IncludeSiblings": {
          "type": "boolean"
        },
        "IncludeSubItems": {
          "title": "IncludeSubItems will include any items that are not the children but are defined for a particular object\nSuch items will have the particular object as the parent but have a different ObjectType to the parent",
          "type": "boolean"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      },
      "title": "ListHierarchyNodesQuery gets a list of Hierarchy nodes (ObjectHeaders whose parent ObjectType is the same as the object's ObjectType",
      "type": "object"
    },
    "conquest_apiListStandardActionsResult": {
      "properties": {
        "StandardActions": {
          "items": {
            "$ref": "#/definitions/conquest_apiStandardActionEntity"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiListStandardDefectResponsesQuery": {
      "properties": {
        "StdDefectIDs": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiListStandardDefectResponsesResult": {
      "properties": {
        "Severities": {
          "items": {
            "$ref": "#/definitions/conquest_apiStandardDefectSeverity"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiListViewFieldsQuery": {
      "properties": {
        "Context": {
          "description": "A Context provides a set of fields available to a view which uses that Context.\nThese fields have a source (table or view) and an attribute (column).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiListWorkOrdersResult": {
      "properties": {
        "ActionDescription": {
          "title": "Need to display action description in the work order form",
          "type": "string"
        },
        "ContractorEmailAddress": {
          "type": "string"
        },
        "ReferenceID": {
          "title": "Need to display action reference id in the work order form",
          "type": "string"
        },
        "RelatedDocuments": {
          "items": {
            "$ref": "#/definitions/conquest_apiDocument"
          },
          "type": "array"
        },
        "Reports": {
          "items": {
            "$ref": "#/definitions/conquest_apiReport"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiLock": {
      "properties": {
        "Status": {
          "items": {
            "type": "string"
          },
          "title": "for an Asset, 'Read Only' or 'Disposed'\nfor an Action, 'Read Only', 'At Issue', ..., 'Completed'\nfor a Defect 'Read Only', 'Completed'",
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiLogBookActionCompletionProcess": {
      "properties": {
        "NextLogActionDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "NextLogMeterReading": {
          "format": "double",
          "type": "number"
        },
        "NextLogStdActionID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiMapObject": {
      "properties": {
        "Group": {
          "format": "int32",
          "type": "integer"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "ObjectName": {
          "type": "string"
        },
        "Style": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "Wkt": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiMapObjectsRecordSet": {
      "properties": {
        "Objects": {
          "items": {
            "$ref": "#/definitions/conquest_apiMapObject"
          },
          "type": "array"
        },
        "contextDescriptor": {
          "$ref": "#/definitions/conquest_apiContextDescriptor"
        },
        "contextDescriptorsForGroups": {
          "items": {
            "$ref": "#/definitions/conquest_apiContextDescriptor"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiMapViewRecord": {
      "properties": {
        "MapViewID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "UserViewIDs": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiMasterActionCompletionProcess": {
      "properties": {
        "CreateMasterForRepeatableSubActions": {
          "type": "boolean"
        },
        "NextRepeatableDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiMoveActionCommand": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        },
        "AssetID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiMoveAssetCommand": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "ParentID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiNewConditionInspectionCommand": {
      "properties": {
        "AssetID": {
          "format": "int32",
          "type": "integer"
        },
        "Inspection": {
          "$ref": "#/definitions/conquest_apiInspectionRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiObjectAttribute": {
      "description": "ObjectAttribute is a description of an attribute on one of the ObjectTypes.\n\nObjectAttribute is experimental at the moment for the reason that the actual values it returns\nis subject to change as we work on making the following fields correct/consistent.\n\nValueType, Nullable, Parameter",
      "properties": {
        "Caption": {
          "type": "string"
        },
        "ForeignObjectPath": {
          "type": "string"
        },
        "ForeignObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "Nullable": {
          "type": "boolean"
        },
        "ObjectAttributeKind": {
          "$ref": "#/definitions/conquest_apiObjectAttributeKind"
        },
        "ObjectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "Parameter": {
          "title": "The Parameter string that conforms to the ParameterType",
          "type": "string"
        },
        "ParameterType": {
          "$ref": "#/definitions/conquest_apiObjectAttributeParameterType"
        },
        "Path": {
          "title": "column",
          "type": "string"
        },
        "PrimaryKey": {
          "type": "boolean"
        },
        "ValueType": {
          "$ref": "#/definitions/conquest_apiValueType"
        }
      },
      "type": "object"
    },
    "conquest_apiObjectAttributeKind": {
      "default": "ObjectAttributeKind_Value",
      "enum": [
        "ObjectAttributeKind_Value",
        "ObjectAttributeKind_Calculated"
      ],
      "type": "string"
    },
    "conquest_apiObjectAttributeParameterType": {
      "default": "ObjectAttributeParameterType_Unknown",
      "enum": [
        "ObjectAttributeParameterType_Unknown",
        "ObjectAttributeParameterType_CodeListID",
        "ObjectAttributeParameterType_CodeListName",
        "ObjectAttributeParameterType_EnumerationValue",
        "ObjectAttributeParameterType_EnumerationDisplayName",
        "ObjectAttributeParameterType_CodeID",
        "ObjectAttributeParameterType_LineStyleValue",
        "ObjectAttributeParameterType_FontStyleValue",
        "ObjectAttributeParameterType_ShapeStyleValue"
      ],
      "title": "An ObjectAttribute may be parameterised, ObjectAttributeParameterType indicates how a parameter is interpreted",
      "type": "string"
    },
    "conquest_apiObjectHeader": {
      "description": "ObjectHeader is the name of the object and it's relation to other objects that are a primary part of it's description.\n\nThe object for an ObjectHeader is a Hierarchy node if the parent's ObjectType is the same as the object's ObjectType",
      "properties": {
        "AttributeSetKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "AttributeSetKey refers to the attribute set which describes this object's shape"
        },
        "Depth": {
          "format": "int32",
          "title": "Depth denotes the depth of the object in the hierarchy",
          "type": "integer"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "ObjectKey of this object"
        },
        "ObjectName": {
          "type": "string"
        },
        "Order": {
          "description": "Order of a node in a list of siblings.",
          "format": "int32",
          "type": "integer"
        },
        "ParentKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "ParentKey refers to the parent that this object is for"
        },
        "TypeKey": {
          "$ref": "#/definitions/conquest_apiObjectKey",
          "title": "TypeKey refers to the type which determines this object's business rules"
        }
      },
      "type": "object"
    },
    "conquest_apiObjectKey": {
      "description": "When using the ObjectKey, make sure that you only encode one of 'int32Value', 'stringValue' and 'timestampValue'.\n\nIf not you will get \"invalid argument\" or \"bad request\" as a response.\n\nFor example send:\n\n     {\"objectType\": \"ObjectType_Asset\", \"int32Value\": 123}\n\nDo not send:\n\n     {\"objectType\": \"ObjectType_Asset\", \"int32Value\": 123, \"stringValue\": \"\", \"timestampValue\": \"0001-01-01.....Z\"}",
      "example": {
        "int32Value": 123,
        "objectType": "ObjectType_Request"
      },
      "properties": {
        "int32Value": {
          "description": "Choose one of 'int32Value', 'stringValue' and 'timestampValue'.\n\nTypically, an id is a unary key with the int type and only this needs to be provided.",
          "format": "int32",
          "type": "integer"
        },
        "objectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "stringValue": {
          "description": "Choose one of 'int32Value', 'stringValue' and 'timestampValue'.\n\nNot every id can be an integer, in the odd case, a 'stringValue' will be used instead.\n\nA guid, string like a uri, or an encoded composite key, eg \"(DefectID,InspectionID)\" when the ObjectType is DefectHistory",
          "type": "string"
        },
        "timestampValue": {
          "description": "Choose one of 'int32Value', 'stringValue' and 'timestampValue'.\n\nTimestamp as an id is typically used to reference a new object that does not yet have an id.\n\nNOTE: Although 'oneof' should mean JSON clients do not serialize this if it's not set.\n      Unfortunately, this is not always the case, so please make sure you JSON client\n      doesn't serialize this when not set.",
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "conquest_apiObjectKeyValue": {
      "properties": {
        "value": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      },
      "type": "object"
    },
    "conquest_apiObjectRelation": {
      "description": "ObjectRelation specifies a link between objects, it does not specify a direction of the relationship.\nThe default direction of the relationship is chosen.\n\nExamples of directions\n    a --\u003e b\n    a \u003c-- b\n    a \u003c-\u003e b",
      "properties": {
        "a": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "b": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      },
      "type": "object"
    },
    "conquest_apiObjectType": {
      "default": "ObjectType_None",
      "description": "- ObjectType_Asset: AssetEntity\n - ObjectType_Action: ActionEntity\n - ObjectType_Request: RequestEntity\n - ObjectType_Defect: DefectEntity\n - ObjectType_InspectionProgram: InspectionProgram (HPC key)\n - ObjectType_Location: Values\n - ObjectType_ResourceAssignment: ResourceAssignment is a resource entry on an Action\n - ObjectType_ConditionHistory: ConditionHistory is the saved attributes at a point in time of an Asset to ConditionHistory (tblInspectionHist). Keyed by ConditionHistory.(AssetID,InspectionID)\n - ObjectType_AssetInspection: An AssetInspection is the saved attributes at a point in time determined by the type of Standard Inspection. Keyed by AssetInspection.(AssetID,InspectionID)\n - ObjectType_DefectHistory: DefectHistory is the saved attributes at a point in time of a Defect to DefectHistory. Keyed with DefectHistory.(Defect,InspectionID)\n - ObjectType_AssetType: Archetypes / Templates / Descriptions",
      "enum": [
        "ObjectType_None",
        "ObjectType_Asset",
        "ObjectType_Action",
        "ObjectType_Request",
        "ObjectType_Defect",
        "ObjectType_LogBook",
        "ObjectType_LogReading",
        "ObjectType_CyclicAction",
        "ObjectType_Inspection",
        "ObjectType_OrganisationUnit",
        "ObjectType_Contractor",
        "ObjectType_Filter",
        "ObjectType_View",
        "ObjectType_Query",
        "ObjectType_Report",
        "ObjectType_RiskEvent",
        "ObjectType_MapView",
        "ObjectType_InspectionProgram",
        "ObjectType_Location",
        "ObjectType_Function",
        "ObjectType_Resource",
        "ObjectType_ResourceAssignment",
        "ObjectType_Hierarchy",
        "ObjectType_CodeField",
        "ObjectType_Code",
        "ObjectType_Document",
        "ObjectType_DiaryEntry",
        "ObjectType_DeteriorationCurve",
        "ObjectType_ValuationTransaction",
        "ObjectType_DocumentContainer",
        "ObjectType_ConditionHistory",
        "ObjectType_AssetInspection",
        "ObjectType_DefectHistory",
        "ObjectType_AssetType",
        "ObjectType_StandardAction",
        "ObjectType_StandardDefect",
        "ObjectType_StandardInspection",
        "ObjectType_StandardRiskEvent",
        "ObjectType_ActionCategory",
        "ObjectType_AttributeSet"
      ],
      "title": "ObjectType is for an object of a type with an ID that we can reference",
      "type": "string"
    },
    "conquest_apiPermission": {
      "default": "Permission_NotSet",
      "enum": [
        "Permission_NotSet",
        "Permission_NoAccess",
        "Permission_ReadOnly",
        "Permission_Edit"
      ],
      "type": "string"
    },
    "conquest_apiPredefinedContextCriteria": {
      "properties": {
        "Criteria": {
          "$ref": "#/definitions/conquest_apiCriteria"
        },
        "EnabledByDefault": {
          "description": "EnabledByDefault specifies whether the filter is applied to a Context is no preference is specified.",
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        }
      },
      "title": "PredefinedContextCriteria is a filter applied to a Context",
      "type": "object"
    },
    "conquest_apiRecordColumn": {
      "properties": {
        "alias": {
          "description": "alias is the column name or SQL alias in a query or user view.\n\n- An alias with a prefix of 2 underscores '__' are reserved for Conquest. These fields are subject to change, they're a temporary solution\n  For example, __Title, __Subtitle\n\nWARNING alias is not finalized, don't write code that depends on it.\n\nview.column for non-calculated values defined in a Context (a selection of fields in the Field Dictionary)",
          "type": "string"
        },
        "caption": {
          "title": "caption == alias in a user view by default",
          "type": "string"
        },
        "group": {
          "format": "int32",
          "title": "For a polymorphic RecordSet this denotes the column group",
          "type": "integer"
        },
        "identity": {
          "title": "A list of [RecordColumn]s have multiple ValueType=ObjectKey. Identity states that\nthis RecordColumn is the identity a RecordRow",
          "type": "boolean"
        },
        "index": {
          "format": "int32",
          "title": "index is always set to a value 0 to n-1, where n is the row length of a column group",
          "type": "integer"
        },
        "relation": {
          "$ref": "#/definitions/conquest_apiRelation"
        },
        "valueType": {
          "$ref": "#/definitions/conquest_apiValueType",
          "title": "If ValueType == ObjectKey, Relation is always set"
        }
      },
      "type": "object"
    },
    "conquest_apiRecordKey": {
      "properties": {
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "ObjectKey2": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      },
      "type": "object"
    },
    "conquest_apiRecordRow": {
      "properties": {
        "columns": {
          "items": {
            "$ref": "#/definitions/conquest_apiAnyValue"
          },
          "type": "array"
        },
        "group": {
          "format": "int32",
          "title": "For a polymorphic RecordSet this denotes the column group",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiRecordSet": {
      "properties": {
        "columns": {
          "items": {
            "$ref": "#/definitions/conquest_apiRecordColumn"
          },
          "type": "array"
        },
        "contextDescriptor": {
          "$ref": "#/definitions/conquest_apiContextDescriptor"
        },
        "contextDescriptorsForGroups": {
          "items": {
            "$ref": "#/definitions/conquest_apiContextDescriptor"
          },
          "type": "array"
        },
        "cursor": {
          "$ref": "#/definitions/conquest_apiRecordSetCursor"
        },
        "rows": {
          "items": {
            "$ref": "#/definitions/conquest_apiRecordRow"
          },
          "type": "array"
        }
      },
      "title": "In a RecordSet, for a column_group, the column order in columns list corresponds with the columns in a record row",
      "type": "object"
    },
    "conquest_apiRecordSetCursor": {
      "properties": {
        "more": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "conquest_apiRelateResult": {
      "type": "object"
    },
    "conquest_apiRelation": {
      "properties": {
        "objectType": {
          "$ref": "#/definitions/conquest_apiObjectType"
        },
        "path": {
          "title": "path is the name of the field on an object, for example, given an ObjectType of Asset, it could be AssetDescription",
          "type": "string"
        }
      },
      "title": "Relation refers to an attribute on an object",
      "type": "object"
    },
    "conquest_apiRemoveDocumentCommand": {
      "properties": {
        "DocumentID": {
          "format": "int32",
          "type": "integer"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        }
      },
      "type": "object"
    },
    "conquest_apiRepeatCycleUnits": {
      "default": "Day",
      "enum": [
        "Day",
        "Week",
        "Month",
        "Year"
      ],
      "type": "string"
    },
    "conquest_apiReport": {
      "properties": {
        "ReportDefinition": {
          "title": "ReportDefinition is used on the server side to get the required report document. \nThis is the key",
          "type": "string"
        },
        "ReportName": {
          "title": "ReportName is used to display the name of the report on client side",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiRequestEntity": {
      "properties": {
        "ArqID": {
          "format": "int32",
          "type": "integer"
        },
        "Completed": {
          "type": "boolean"
        },
        "CompletedBy": {
          "type": "string"
        },
        "DocumentLocation": {
          "type": "string"
        },
        "EditDate": {
          "format": "date-time",
          "type": "string"
        },
        "Editor": {
          "type": "string"
        },
        "MapStyle": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiRequestRecord"
        },
        "ReferenceID": {
          "type": "string"
        },
        "lock": {
          "$ref": "#/definitions/conquest_apiLock"
        }
      },
      "title": "RequestEntity is comprised of the Request's Record and auxiliary fields (calculated, related)",
      "type": "object"
    },
    "conquest_apiRequestRecord": {
      "description": "DefectRecord is a selection of fields that may be modified directly.",
      "properties": {
        "Account": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "CompletionDate": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "DateRequired": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "DocumentReference": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "EntryDate": {
          "format": "date-time",
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "GeometryData": {
          "$ref": "#/definitions/conquest_apiGeometryDataValue"
        },
        "HomePhone": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "LocationCoordinates": {
          "$ref": "#/definitions/conquest_apiGeographyDataValue",
          "title": "LocationCoordinates is a pin/point that defaults to the centroid on the Request's geography object"
        },
        "MobilePhone": {
          "type": "string"
        },
        "OrganisationUnitID": {
          "format": "int32",
          "type": "integer"
        },
        "PostCode": {
          "type": "string"
        },
        "ReceivedBy": {
          "type": "string"
        },
        "ReceivedMethod": {
          "format": "int32",
          "type": "integer"
        },
        "RequestCategory": {
          "format": "int32",
          "type": "integer"
        },
        "RequestDetail": {
          "type": "string"
        },
        "RequestorName": {
          "type": "string"
        },
        "RequestorType": {
          "format": "int32",
          "type": "integer"
        },
        "Response": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "format": "int32",
          "type": "integer"
        },
        "Suburb": {
          "type": "string"
        },
        "Urgency": {
          "format": "int32",
          "type": "integer"
        },
        "WorkPhone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiRequestRecordChangeSet": {
      "properties": {
        "Changes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiRequestRecord"
        },
        "RequestID": {
          "format": "int32",
          "type": "integer"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiRequestRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiResponseTimeData": {
      "properties": {
        "PriorityID": {
          "format": "int32",
          "type": "integer"
        },
        "RespondIn": {
          "format": "int32",
          "type": "integer"
        },
        "Score": {
          "format": "double",
          "type": "number"
        },
        "UnitTypeID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiResponseTimeList": {
      "properties": {
        "Items": {
          "items": {
            "$ref": "#/definitions/conquest_apiResponseTimeData"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiReverseActionCompletionCommand": {
      "properties": {
        "ActionID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiReverseActionCompletionResult": {
      "type": "object"
    },
    "conquest_apiSendEmailResult": {
      "properties": {
        "job_key": {
          "$ref": "#/definitions/conquest_apiJobKey"
        }
      },
      "type": "object"
    },
    "conquest_apiSessionSummary": {
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "ApplicationDatabase": {
          "title": "The database you are connected to",
          "type": "string"
        },
        "ApplicationFullName": {
          "type": "string"
        },
        "ApplicationUsername": {
          "title": "The username specified in the database you are connected to\n- For a site-installation, this will likely be your Active Directory login\n- For a cloud installatino, this will be the same as your Conquest Services login",
          "type": "string"
        },
        "IsAdmin": {
          "type": "boolean"
        },
        "IsProductionApplication": {
          "type": "boolean"
        },
        "IsProductionDatabase": {
          "type": "boolean"
        },
        "LicenceType": {
          "type": "string"
        },
        "Username": {
          "title": "Your login from Conquest Services",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiShapeStyle": {
      "properties": {
        "FillColor": {
          "type": "string"
        },
        "FillOpacity": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "conquest_apiSimpleActionCompletionProcess": {
      "properties": {
        "NextRepeatableDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiStandardActionEntity": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "DocumentLocation": {
          "type": "string"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiStandardActionRecord"
        },
        "StdActionID": {
          "format": "int32",
          "type": "integer"
        },
        "TypeID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiStandardActionRecord": {
      "properties": {
        "Account": {
          "type": "string"
        },
        "ActionCategory": {
          "format": "int32",
          "type": "integer"
        },
        "ActionTaskList": {
          "$ref": "#/definitions/conquest_apiActionTaskList"
        },
        "ActionType": {
          "$ref": "#/definitions/conquest_apiActionType"
        },
        "CompletedIconFile": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "Department": {
          "format": "int32",
          "title": "google.protobuf.Int32Value ConditionPercent = 5;\ngoogle.protobuf.DoubleValue Cycle = 6;\nbool CycleAuto = 7;\ngoogle.protobuf.StringValue CycleUnits = 8;\nbool Deleted = 9;",
          "type": "integer"
        },
        "DimRateMultiplier": {
          "format": "int32",
          "type": "integer"
        },
        "IconFile": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "NewWorks": {
          "title": "bool IncludeLogChildren = 13;\nbool Inherited = 14; \ngoogle.protobuf.StringValue Instrctns = 15;\ngoogle.protobuf.StringValue Layout = 16;\ngoogle.protobuf.DoubleValue LogMaxVal = 17;\nbool LogNoRepeat = 18;\ngoogle.protobuf.DoubleValue LogWarnVal = 19;\ngoogle.protobuf.Int32Value LowerConditionPercent = 20;\ngoogle.protobuf.Int32Value NewConditionPercent = 21;",
          "type": "boolean"
        },
        "Rehabilitation": {
          "title": "google.protobuf.Int32Value Ordr = 23;\ngoogle.protobuf.Int32Value Priority = 24;\ngoogle.protobuf.DoubleValue Quantity = 25;",
          "type": "boolean"
        },
        "RequestResponse": {
          "type": "boolean"
        },
        "StdActionDescription": {
          "type": "string"
        },
        "Urgency": {
          "format": "int32",
          "title": "google.protobuf.Int32Value UOM = 29;",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiStandardDefectEntity": {
      "properties": {
        "AttributeID": {
          "format": "int32",
          "type": "integer"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiStandardDefectRecord"
        },
        "StdDefectID": {
          "format": "int32",
          "type": "integer"
        },
        "TypeID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiStandardDefectRecord": {
      "properties": {
        "CompletedIconFile": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "DefaultSeverityID": {
          "format": "int32",
          "type": "integer"
        },
        "IconFile": {
          "$ref": "#/definitions/conquest_apiStyle"
        },
        "Layout": {
          "type": "string"
        },
        "Ordr": {
          "format": "int32",
          "type": "integer"
        },
        "ResponseTimes": {
          "$ref": "#/definitions/conquest_apiResponseTimeList"
        },
        "StdDefectDescription": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiStandardDefectResponse": {
      "properties": {
        "Duration": {
          "format": "int32",
          "type": "integer"
        },
        "DurationUnit": {
          "$ref": "#/definitions/conquest_apiCalendarDurationUnit"
        },
        "HierarchyID": {
          "format": "int32",
          "type": "integer"
        },
        "Score": {
          "format": "int32",
          "type": "integer"
        },
        "SeverityID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiStandardDefectSeverity": {
      "properties": {
        "Ordr": {
          "format": "int32",
          "type": "integer"
        },
        "Responses": {
          "items": {
            "$ref": "#/definitions/conquest_apiStandardDefectResponse"
          },
          "type": "array"
        },
        "Severity": {
          "type": "string"
        },
        "SeverityID": {
          "format": "int32",
          "type": "integer"
        },
        "StdDefectID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiStandardInspectionEntity": {
      "properties": {
        "Record": {
          "$ref": "#/definitions/conquest_apiStandardInspectionRecord"
        },
        "StdInspectionID": {
          "format": "int32",
          "type": "integer"
        },
        "TypeID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiStandardInspectionRecord": {
      "properties": {
        "StdInspectionDescription": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiStringListValue": {
      "properties": {
        "value": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiStyle": {
      "properties": {
        "FontStyle": {
          "$ref": "#/definitions/conquest_apiFontStyle"
        },
        "LineStyle": {
          "$ref": "#/definitions/conquest_apiLineStyle"
        },
        "ShapeStyle": {
          "$ref": "#/definitions/conquest_apiShapeStyle"
        },
        "StyleType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiSubContractorList": {
      "properties": {
        "Items": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiSystemSetting": {
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiSystemVersionResponse": {
      "properties": {
        "ConquestAPIVersion": {
          "type": "string"
        },
        "ConquestVersion": {
          "type": "string"
        },
        "SupportedDatabaseObjectsVersion": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiTagAsInspectedCommand": {
      "properties": {
        "AssetIDs": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "Inspection": {
          "$ref": "#/definitions/conquest_apiInspectionRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiTimestampValue": {
      "properties": {
        "value": {
          "description": "The Timestamp value.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiTrimDocument": {
      "properties": {
        "DateCreated": {
          "$ref": "#/definitions/conquest_apiTimestampValue"
        },
        "DocType": {
          "type": "string"
        },
        "RecordNumber": {
          "type": "string"
        },
        "RecordType": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Uri": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiTrimDocumentsResponse": {
      "properties": {
        "TrimDocuments": {
          "items": {
            "$ref": "#/definitions/conquest_apiTrimDocument"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiTrimStatusResponse": {
      "properties": {
        "CurrentUser": {
          "type": "string"
        },
        "DatabaseId": {
          "type": "string"
        },
        "DatabaseName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiUpdateCodeListRecordChangeSet": {
      "properties": {
        "Changes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "CodeListID": {
          "format": "int32",
          "type": "integer"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiCodeListRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiCodeListRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiUpdateContractorRecordChangeSet": {
      "properties": {
        "Changes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ContractorID": {
          "format": "int32",
          "type": "integer"
        },
        "LastEdit": {
          "format": "date-time",
          "type": "string"
        },
        "Original": {
          "$ref": "#/definitions/conquest_apiContractorRecord"
        },
        "Updated": {
          "$ref": "#/definitions/conquest_apiContractorRecord"
        }
      },
      "type": "object"
    },
    "conquest_apiUpdateDocumentMigrationStatusResponse": {
      "type": "object"
    },
    "conquest_apiUploadStatus": {
      "default": "UploadStatus_NotStarted",
      "enum": [
        "UploadStatus_NotStarted",
        "UploadStatus_Error",
        "UploadStatus_Uploading",
        "UploadStatus_Received",
        "UploadStatus_Completed"
      ],
      "type": "string"
    },
    "conquest_apiUploadToken": {
      "properties": {
        "Address": {
          "type": "string"
        },
        "ObjectKey": {
          "$ref": "#/definitions/conquest_apiObjectKey"
        },
        "Status": {
          "$ref": "#/definitions/conquest_apiUploadStatus"
        },
        "Token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiUserEntity": {
      "properties": {
        "AccountID": {
          "title": "Conquest Account ID",
          "type": "string"
        },
        "PreferredName": {
          "title": "Conquest Account Name",
          "type": "string"
        },
        "Record": {
          "$ref": "#/definitions/conquest_apiUserRecord"
        },
        "Username": {
          "title": "Conquest Account Username",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiUserHistoryItem": {
      "properties": {
        "LastUsed": {
          "format": "date-time",
          "title": "LastUsed is the last time a form was opened",
          "type": "string"
        },
        "Link": {
          "$ref": "#/definitions/conquest_apiItemLink",
          "title": "string Username = 1;"
        },
        "Order": {
          "format": "int32",
          "title": "Order, if a history item has an order, it is a \"pinned item\", otherwise it is a \"recent item\"",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apiUserPreference": {
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiUserRecord": {
      "properties": {
        "ActionsPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "AssetValuationPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "AssetsPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "Groups": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "KnowledgeBasePermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "ListEditorPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "RequestsPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        },
        "ResourceEditorPermission": {
          "$ref": "#/definitions/conquest_apiPermission"
        }
      },
      "type": "object"
    },
    "conquest_apiUserViewFilter": {
      "properties": {
        "Description": {
          "type": "string"
        },
        "FilterID": {
          "format": "int32",
          "type": "integer"
        },
        "FilterName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apiValueType": {
      "default": "ValueType_Unknown",
      "description": "ValueType summaries all the basic data types that all other datatypes/objects/commands\nare build up from.\n\nEach of these data types have two representations in the AnyValue type as follows\n\nIf a value is required in an object, then the data type is as is. For a String, the data type is:\n\n  string\n\n  the default value is an empty string \"\"\n\nIf a value is optional in an object, then the data type is a container with a 'value' attribute\nFor a String the container type is StringValue, it looks like:\n\n  { value: string }\n\n  the default value is NULL (no container)\n\n - ValueType_String: string\n - ValueType_Boolean: bool\n - ValueType_Number: double\n - ValueType_Int32: int32 aka. int\n - ValueType_Int64: int64 aka. long, bigint\n - ValueType_Decimal: decimal aka. money/currency, fixed-precision\n - ValueType_Date: Timestamp\n - ValueType_DateTime: Timestamp\n - ValueType_Duration: int64 milliseconds, use this to encode TimeStans\n - ValueType_Code: Code (int32) is an item in a user definable list.\n - ValueType_Hierarchy: Hierarchy (ObjectKey) is an item in a hierarchy such as an Asset tree, the Asset Priority hierarchy lists and Action Categories.\n - ValueType_ObjectKey: ObjectKey is an item with an ID and a type such as an Asset, AssetType, View, Document and DocumentContainer (eg. folder). See ObjectTypes.\n - ValueType_Enumeration: Enumeration (int32) is fixed size ordered list of values. Enumerations have specific business rules attached.\n - ValueType_GeographyData: ValueType_StringList = 14;\n - ValueType_GeometryData: ValueType_Uri = 16;\n   ValueType_Uuid = 17;",
      "enum": [
        "ValueType_Unknown",
        "ValueType_String",
        "ValueType_Boolean",
        "ValueType_Number",
        "ValueType_Int32",
        "ValueType_Int64",
        "ValueType_Decimal",
        "ValueType_Date",
        "ValueType_DateTime",
        "ValueType_Duration",
        "ValueType_Code",
        "ValueType_Hierarchy",
        "ValueType_ObjectKey",
        "ValueType_Enumeration",
        "ValueType_GeographyData",
        "ValueType_GeometryData",
        "ValueType_Style"
      ],
      "type": "string"
    },
    "conquest_apiViewContext": {
      "properties": {
        "Context": {
          "type": "string"
        },
        "ViewFields": {
          "items": {
            "$ref": "#/definitions/conquest_apiViewField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "conquest_apiViewField": {
      "properties": {
        "ContextPath": {
          "description": "The ContextPath is the identifier for a field for a given Context. This value takes the form ' view.column', for example 'v_Assets.AssetID'.",
          "type": "string"
        },
        "ObjectAttribute": {
          "$ref": "#/definitions/conquest_apiObjectAttribute",
          "title": "ObjectAttribute describes the Field\nTODO review, should this be FieldID instead?"
        }
      },
      "type": "object"
    },
    "conquest_apiWhoAmIResponse": {
      "properties": {
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configAzureSearchAddressApi": {
      "properties": {
        "access_key": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "template_url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configBlobStore": {
      "properties": {
        "blob_store_mode": {
          "$ref": "#/definitions/conquest_api_configBlobStoreMode"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "mount": {
          "title": "A mount is a location. Mounting is the attaching of an additional file system to an application.\nYou refer to a file in a mount with the scheme 'blob://{mount}/{relativeFilePath}'",
          "type": "string"
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "title": "'azure' provider will store documents in the container\n'local' provider will store documents in the {DataDirectory}/BlobStorage directory or",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configBlobStoreMode": {
      "default": "BlobStoreMode_Redirect",
      "enum": [
        "BlobStoreMode_Redirect",
        "BlobStoreMode_Gateway"
      ],
      "title": "- BlobStoreMode_Redirect: Clients will receive and be redirected to the blob location\n - BlobStoreMode_Gateway: Clients will download and upload from the blob location, via the API",
      "type": "string"
    },
    "conquest_api_configConquestDevelopmentStaffConfigurationOptions": {
      "properties": {
        "extension_hub_address": {
          "title": "extension_hub_address: (default = https://exthub.conquestsoftware.com.au)",
          "type": "string"
        },
        "login_server_address": {
          "title": "login_server_address: (default = https://auth.conquestsoftware.com.au)\n  You can override this for testing usually we point it to \"https://localhost:5001/\" on a developer machine",
          "type": "string"
        },
        "rules_engine_address": {
          "description": "rulesEngineAddress: (default = localhost:9090)\n  The address of the Conquest API Rules Engine. The Gateway forwards requests to this port.\n\n !!IMPORTANT!! DO NOT EXPOSE THIS PORT TO THE INTERNET IT IS PRIVATE TO THE MACHINE",
          "type": "string"
        },
        "rules_engine_address_for_data_connector": {
          "description": "rulesEngineAddressForDataConnector: (default = localhost:9091)\n  The address of the Conquest API Rules Engine for DataConnector Service. The Gateway forwards requests to this port.\n\n !!IMPORTANT!! DO NOT EXPOSE THIS PORT TO THE INTERNET IT IS PRIVATE TO THE MACHINE",
          "type": "string"
        },
        "services_address": {
          "title": "services_address: (default = https://services.conquest-solutions.com.au)\n  You can override this for testing usually we point it to \"https://localhost:44302/\" on a developer machine",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configDatabaseConnection": {
      "properties": {
        "connection_string": {
          "description": "example: \"Database=Conquest; Integrated Security=True; Server=.;\"",
          "title": "connectionString: (required)\n  The following properties are supported:\n  - Username\n  - Password\n  - Integrated Security = true or false\n  - Server\n  - Database",
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "title": "name: (required)\n  The name that will appear in the connection list",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "sql_service_objective": {
          "type": "string"
        },
        "type": {
          "title": "sqlserver or cosmos",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configEventSource": {
      "description": "'azureeventgrid' provider will receive events from a topic you've set up in Azure.",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configGooglePlacesSearchApi": {
      "properties": {
        "access_key": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "proxy_address": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configLeafletMapConnection": {
      "properties": {
        "access_key": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "max_zoom": {
          "format": "double",
          "type": "number"
        },
        "min_zoom": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "template_url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configLogging": {
      "properties": {
        "path": {
          "title": "path: (default = ./conquest.log)",
          "type": "string"
        },
        "verbosity": {
          "description": "valid values in order of noisy: debug|info|warn|error",
          "title": "verbosity: (default = debug)\n  This setting changes the verbosity (noise) for log messages. 'debug' is the noisiest. If you're having problems\n  this is the setting you want to see everything that's happening",
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configMailService": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "from": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_api_configServicesClientCredentials": {
      "description": "These can be obtained by either of the following methods:\n- Registering your instance of the Conquest API in the Services Portal and adding\n  the credentials manually here\n- Using the [Link] task in the Conquest Management Console",
      "properties": {
        "client_id": {
          "title": "This is a \"Username\" for your instance of the Conquest API",
          "type": "string"
        },
        "client_secret": {
          "title": "This is a password for your instance of the Conquest API",
          "type": "string"
        }
      },
      "title": "ServicesCredentials are the used to connect the Conquest API to services.\nThese are required to host the API. It is used for tasks like\n- Authentication\n- Matching Mobile users with self-hosted APIs\n- Retrieving user and company preferences\n- Submitting service statistics and error logs",
      "type": "object"
    },
    "conquest_api_configTuningConfiguration": {
      "properties": {
        "disable_python_extensions": {
          "title": "disablePythonExtensions: (default = false)\n  when false, python code will be called for validations",
          "type": "boolean"
        },
        "enable_extension_hub": {
          "title": "enableExtensionHub: (default = false)\n  when true, the extension hub will be called for validations and extension hub provided\n  functionality will be available",
          "type": "boolean"
        },
        "enable_extension_hub_allow_list": {
          "description": "enableExtensionHubAllowList: (default = false)\n  if enableExtensionHub is true, a lifecycle method like `ActionSave` that appears in\n  the list extensionHubAllowList will attempt to run a matching extension hub hook.",
          "type": "boolean"
        },
        "extension_hub_allow_list": {
          "description": "extensionHubAllowList: (default = []])\n  if enableExtensionHub is true, a lifecycle method like `ActionSave` that appears in\n  the list extensionHubAllowList will attempt to run a matching extension hub hook.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "gateway_establish_connection_timeout_ms": {
          "format": "int32",
          "type": "integer"
        },
        "import_geometries_only": {
          "description": "importGeometriesOnly: (default = false)\n  when true, the geopackage import will save the geometries without going through the\n  business rule layer. This may significantly improve the importer's performance.",
          "type": "boolean"
        },
        "import_without_extensions": {
          "description": "importWithoutExtensions: (default = false)\n  when true, python extension code will be ignored.",
          "type": "boolean"
        },
        "max_data_set_size": {
          "description": "maxDataSetSize: (default = 3000, max = 3000)\n  request responses must reliably fit within 4mb. 3000 is suitable for this case.\n  Reduce this value if you experience problems with request timeouts or cancellations\n  if a customer has datasets with lots of columns.\n  This is used by the FindQuery endpoints.",
          "format": "int32",
          "type": "integer"
        },
        "max_data_set_size_for_map_objects": {
          "description": "maxDataSetSizeForMapObjects: (default = 10000, max = 10000)\n  request responses must reliably fit within 4mb. 10000 is suitable for this case.\n  Reduce this value if you experience problems with request timeouts or cancellations.\n  This is used by the FindQuery endpoints.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "conquest_apigpkg_column_info": {
      "properties": {
        "column_name": {
          "type": "string"
        },
        "data_type": {
          "type": "string"
        },
        "primary_key": {
          "type": "boolean"
        },
        "table_name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apigpkg_contents": {
      "properties": {
        "data_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "last_change": {
          "format": "date-time",
          "type": "string"
        },
        "max_x": {
          "format": "double",
          "type": "number"
        },
        "max_y": {
          "format": "double",
          "type": "number"
        },
        "min_x": {
          "format": "double",
          "type": "number"
        },
        "min_y": {
          "format": "double",
          "type": "number"
        },
        "srs_id": {
          "format": "int32",
          "type": "integer"
        },
        "table_name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apigpkg_data_columns": {
      "properties": {
        "column_name": {
          "type": "string"
        },
        "constraint_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "table_name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "conquest_apigpkg_geometry_columns": {
      "properties": {
        "column_name": {
          "type": "string"
        },
        "geometry_type_name": {
          "type": "string"
        },
        "m": {
          "format": "int32",
          "type": "integer"
        },
        "srs_id": {
          "format": "int32",
          "type": "integer"
        },
        "table_name": {
          "type": "string"
        },
        "z": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protobufAny": {
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
      "properties": {
        "type_url": {
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.",
          "type": "string"
        },
        "value": {
          "description": "Must be a valid serialized protocol buffer of the above specified type.",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    },
    "runtimeError": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "type": "array"
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "externalDocs": {
    "description": "About the Conquest API",
    "url": "https://conquestsolutions.github.io/"
  },
  "info": {
    "title": "Conquest API v4",
    "version": "4"
  },
  "paths": {
    "/api/actions/apply_standard_action": {
      "post": {
        "operationId": "ActionService_ApplyStandardAction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiApplyStandardActionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/complete_action": {
      "post": {
        "operationId": "ActionService_CompleteAction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCompleteActionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiCompleteActionResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/completion_details": {
      "post": {
        "operationId": "ActionService_GetActionCompletionDetails",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetActionCompletionDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetActionCompletionDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/create_succeeding_action": {
      "post": {
        "operationId": "ActionService_CreateSucceedingAction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateSucceedingActionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/delete_action": {
      "post": {
        "operationId": "ActionService_DeleteAction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDeleteActionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/move_action": {
      "post": {
        "operationId": "ActionService_MoveAction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiMoveActionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/reverse_action_completion": {
      "post": {
        "operationId": "ActionService_ReverseActionCompletion",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiReverseActionCompletionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiReverseActionCompletionResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/update_action": {
      "post": {
        "operationId": "ActionService_UpdateAction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiActionRecordChangeSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeSetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/actions/{value}": {
      "get": {
        "operationId": "ActionService_GetAction",
        "parameters": [
          {
            "description": "The int32 value.",
            "format": "int32",
            "in": "path",
            "name": "value",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiActionEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ActionService"
        ]
      }
    },
    "/api/asset_inspections/create_asset_inspection": {
      "post": {
        "operationId": "AssetInspectionService_CreateAssetInspection",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateAssetInspectionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetInspectionService"
        ]
      }
    },
    "/api/asset_inspections/create_defect": {
      "post": {
        "operationId": "AssetInspectionService_CreateDefectForAssetInspection",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateDefectForAssetInspectionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetInspectionService"
        ]
      }
    },
    "/api/asset_inspections/delete_asset_inspection": {
      "post": {
        "operationId": "AssetInspectionService_DeleteAssetInspection",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDeleteAssetInspectionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetInspectionService"
        ]
      }
    },
    "/api/asset_inspections/update_asset_inspection": {
      "post": {
        "operationId": "AssetInspectionService_UpdateAssetInspection",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiAssetInspectionRecordChangeSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeSetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetInspectionService"
        ]
      }
    },
    "/api/asset_inspections/{value}": {
      "get": {
        "operationId": "AssetInspectionService_GetAssetInspection",
        "parameters": [
          {
            "description": "The int32 value.",
            "format": "int32",
            "in": "path",
            "name": "value",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAssetInspectionEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetInspectionService"
        ]
      }
    },
    "/api/assets/change_asset_type": {
      "post": {
        "operationId": "AssetService_ChangeAssetType",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeAssetTypeCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/copy_asset": {
      "post": {
        "operationId": "AssetService_CopyAsset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCopyAssetCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiCopyAssetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/create_action": {
      "post": {
        "operationId": "AssetService_CreateActionForAsset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateActionForAssetCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/create_asset": {
      "post": {
        "operationId": "AssetService_CreateAsset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateAssetCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/create_defect": {
      "post": {
        "operationId": "AssetService_CreateDefectForAsset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateDefectForAssetCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/delete_asset": {
      "post": {
        "operationId": "AssetService_DeleteAsset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDeleteAssetCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/list_inspections": {
      "post": {
        "operationId": "AssetService_ListInspectionsForAsset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiInspectionsForAssetQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiInspectionsForAssetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/move_asset": {
      "post": {
        "operationId": "AssetService_MoveAsset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiMoveAssetCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/new_condition_inspection": {
      "post": {
        "operationId": "AssetService_NewConditionInspection",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiNewConditionInspectionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiObjectKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/tag_as_inspected": {
      "post": {
        "operationId": "AssetService_TagAsInspected",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiTagAsInspectedCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/update_asset": {
      "post": {
        "operationId": "AssetService_UpdateAsset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiAssetRecordChangeSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeSetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/{value}": {
      "get": {
        "operationId": "AssetService_GetAsset",
        "parameters": [
          {
            "description": "The int32 value.",
            "format": "int32",
            "in": "path",
            "name": "value",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAssetEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/defects/calculate_defect_response_date": {
      "post": {
        "operationId": "DefectService_CalculateDefectResponseDate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiCalculateDefectResponseDateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/defects/complete_defect": {
      "post": {
        "operationId": "DefectService_CompleteDefect",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCompleteDefectCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/defects/create_action": {
      "post": {
        "operationId": "DefectService_CreateActionForDefect",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateActionForDefectCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/defects/delete_defect": {
      "post": {
        "operationId": "DefectService_DeleteDefect",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDeleteDefectCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/defects/update_defect": {
      "post": {
        "operationId": "DefectService_UpdateDefect",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDefectRecordChangeSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeSetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/defects/{value}": {
      "get": {
        "operationId": "DefectService_GetDefect",
        "parameters": [
          {
            "description": "The int32 value.",
            "format": "int32",
            "in": "path",
            "name": "value",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiDefectEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DefectService"
        ]
      }
    },
    "/api/documents/add_document": {
      "post": {
        "operationId": "DocumentService_AddDocument",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiAddDocumentCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAddDocumentResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/change_document_content": {
      "post": {
        "operationId": "DocumentService_ChangeDocumentContent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeDocumentContentCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAddDocumentResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/change_document_description": {
      "post": {
        "operationId": "DocumentService_ChangeDocumentDescription",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeDocumentDescriptionCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/generate_document_link": {
      "post": {
        "operationId": "DocumentService_GenerateDocumentLink",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGenerateDocumentLinkCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGenerateDocumentLinkResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/list": {
      "post": {
        "operationId": "DocumentService_GetDocuments",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetDocumentsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetDocumentsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/list_locations": {
      "post": {
        "operationId": "DocumentService_ListDocumentLocations",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListDocumentLocationsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiListDocumentLocationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/documents/remove_document": {
      "post": {
        "operationId": "DocumentService_RemoveDocument",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiRemoveDocumentCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DocumentService"
        ]
      }
    },
    "/api/find": {
      "post": {
        "operationId": "ViewService_Find",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiFindQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiFindResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "summary": "Find will select all the provided FieldNames for a given Context",
        "tags": [
          "ViewService"
        ]
      }
    },
    "/api/geo/add_geo_package": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "GeoService_AddGeoPackage",
        "parameters": [
          {
            "description": "A GeoPackage file (sqlite with the geopackage schema, .gpkg)",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GeoService"
        ]
      }
    },
    "/api/import/add/{ImportType}": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "CsvImportService_AddCsvImport",
        "parameters": [
          {
            "description": "Action, Asset, Defect, Request, AssetInspection, RiskEvent, LogBook",
            "in": "path",
            "name": "ImportType",
            "required": true,
            "type": "string"
          },
          {
            "description": "CSV file data",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "CsvImportService"
        ]
      }
    },
    "/api/import/delete/{JobID}": {
      "delete": {
        "operationId": "CsvImportService_DeleteCsvImport",
        "parameters": [
          {
            "description": "aka. ProcessID/BatchID",
            "in": "path",
            "name": "JobID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "summary": "Remove import",
        "tags": [
          "CsvImportService"
        ]
      }
    },
    "/api/import/start": {
      "post": {
        "operationId": "CsvImportService_StartCsvImport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "CsvImportService"
        ]
      }
    },
    "/api/import/state/{JobID}": {
      "get": {
        "operationId": "CsvImportService_GetCsvImportState",
        "parameters": [
          {
            "description": "aka. ProcessID/BatchID",
            "in": "path",
            "name": "JobID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiCsvImportStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "summary": "Get status for import",
        "tags": [
          "CsvImportService"
        ]
      }
    },
    "/api/jobs/current_state": {
      "post": {
        "operationId": "JobsService_GetJobState",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetJobStateQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetJobStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "JobsService"
        ]
      }
    },
    "/api/knowledge_base/describe_enumeration": {
      "post": {
        "operationId": "KnowledgeBaseService_DescribeEnumeration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDescribeEnumerationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiDescribeEnumerationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_attribute_sets": {
      "post": {
        "operationId": "KnowledgeBaseService_ListAttributeSets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListAttributeSetsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiAttributeSetsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_code_lists": {
      "post": {
        "operationId": "KnowledgeBaseService_GetCodeLists",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiGetCodeListsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetCodeListsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_field_names_for_attribute_set": {
      "post": {
        "operationId": "KnowledgeBaseService_GetAttributeSetFieldNames",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiGetAttributeSetFieldNamesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_standard_defect_responses": {
      "post": {
        "operationId": "KnowledgeBaseService_ListStandardDefectResponses",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListStandardDefectResponsesQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiListStandardDefectResponsesResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/knowledge_base/list_view_fields_for_context": {
      "post": {
        "operationId": "KnowledgeBaseService_ListViewFields",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListViewFieldsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiViewContext"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "KnowledgeBaseService"
        ]
      }
    },
    "/api/list_filters": {
      "post": {
        "operationId": "ViewService_ListFilters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListFiltersQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiListFiltersResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ViewService"
        ]
      }
    },
    "/api/list_hierarchy_nodes": {
      "post": {
        "description": "A hierarchy object is an object whose ObjectType and parents ObjectType are the same.",
        "operationId": "ViewService_ListHierarchyNodes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiListHierarchyNodesQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiFindObjectHeadersResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "summary": "ListHierarchyNodes returns the target HierarchyNode and a list of related HierarchyNodes as requested in the query",
        "tags": [
          "ViewService"
        ]
      }
    },
    "/api/requests/create_request": {
      "post": {
        "operationId": "RequestService_CreateRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiCreateRequestCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "RequestService"
        ]
      }
    },
    "/api/requests/delete_request": {
      "post": {
        "operationId": "RequestService_DeleteRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiDeleteRequestCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "RequestService"
        ]
      }
    },
    "/api/requests/update_request": {
      "post": {
        "operationId": "RequestService_UpdateRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/conquest_apiRequestRecordChangeSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiChangeSetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "RequestService"
        ]
      }
    },
    "/api/requests/{value}": {
      "get": {
        "operationId": "RequestService_GetRequest",
        "parameters": [
          {
            "description": "The int32 value.",
            "format": "int32",
            "in": "path",
            "name": "value",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiRequestEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "RequestService"
        ]
      }
    },
    "/api/system/version": {
      "get": {
        "operationId": "SystemService_ApplicationVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/conquest_apiSystemVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "SystemService"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "security": [
    {
      "Api Key from App": []
    }
  ],
  "securityDefinitions": {
    "Api Key from App": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}